/*
 * This file is generated by jOOQ.
 */
package app.finwave.backend.jooq.tables.records;


import app.finwave.backend.jooq.tables.AccountsFolders;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record4;
import org.jooq.Row4;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class AccountsFoldersRecord extends UpdatableRecordImpl<AccountsFoldersRecord> implements Record4<Long, Integer, String, String> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>public.accounts_folders.id</code>.
     */
    public AccountsFoldersRecord setId(Long value) {
        set(0, value);
        return this;
    }

    /**
     * Getter for <code>public.accounts_folders.id</code>.
     */
    public Long getId() {
        return (Long) get(0);
    }

    /**
     * Setter for <code>public.accounts_folders.owner_id</code>.
     */
    public AccountsFoldersRecord setOwnerId(Integer value) {
        set(1, value);
        return this;
    }

    /**
     * Getter for <code>public.accounts_folders.owner_id</code>.
     */
    public Integer getOwnerId() {
        return (Integer) get(1);
    }

    /**
     * Setter for <code>public.accounts_folders.name</code>.
     */
    public AccountsFoldersRecord setName(String value) {
        set(2, value);
        return this;
    }

    /**
     * Getter for <code>public.accounts_folders.name</code>.
     */
    public String getName() {
        return (String) get(2);
    }

    /**
     * Setter for <code>public.accounts_folders.description</code>.
     */
    public AccountsFoldersRecord setDescription(String value) {
        set(3, value);
        return this;
    }

    /**
     * Getter for <code>public.accounts_folders.description</code>.
     */
    public String getDescription() {
        return (String) get(3);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<Long> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record4 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row4<Long, Integer, String, String> fieldsRow() {
        return (Row4) super.fieldsRow();
    }

    @Override
    public Row4<Long, Integer, String, String> valuesRow() {
        return (Row4) super.valuesRow();
    }

    @Override
    public Field<Long> field1() {
        return AccountsFolders.ACCOUNTS_FOLDERS.ID;
    }

    @Override
    public Field<Integer> field2() {
        return AccountsFolders.ACCOUNTS_FOLDERS.OWNER_ID;
    }

    @Override
    public Field<String> field3() {
        return AccountsFolders.ACCOUNTS_FOLDERS.NAME;
    }

    @Override
    public Field<String> field4() {
        return AccountsFolders.ACCOUNTS_FOLDERS.DESCRIPTION;
    }

    @Override
    public Long component1() {
        return getId();
    }

    @Override
    public Integer component2() {
        return getOwnerId();
    }

    @Override
    public String component3() {
        return getName();
    }

    @Override
    public String component4() {
        return getDescription();
    }

    @Override
    public Long value1() {
        return getId();
    }

    @Override
    public Integer value2() {
        return getOwnerId();
    }

    @Override
    public String value3() {
        return getName();
    }

    @Override
    public String value4() {
        return getDescription();
    }

    @Override
    public AccountsFoldersRecord value1(Long value) {
        setId(value);
        return this;
    }

    @Override
    public AccountsFoldersRecord value2(Integer value) {
        setOwnerId(value);
        return this;
    }

    @Override
    public AccountsFoldersRecord value3(String value) {
        setName(value);
        return this;
    }

    @Override
    public AccountsFoldersRecord value4(String value) {
        setDescription(value);
        return this;
    }

    @Override
    public AccountsFoldersRecord values(Long value1, Integer value2, String value3, String value4) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached AccountsFoldersRecord
     */
    public AccountsFoldersRecord() {
        super(AccountsFolders.ACCOUNTS_FOLDERS);
    }

    /**
     * Create a detached, initialised AccountsFoldersRecord
     */
    public AccountsFoldersRecord(Long id, Integer ownerId, String name, String description) {
        super(AccountsFolders.ACCOUNTS_FOLDERS);

        setId(id);
        setOwnerId(ownerId);
        setName(name);
        setDescription(description);
        resetChangedOnNotNull();
    }

    /**
     * Create a detached, initialised AccountsFoldersRecord
     */
    public AccountsFoldersRecord(app.finwave.backend.jooq.tables.pojos.AccountsFolders value) {
        super(AccountsFolders.ACCOUNTS_FOLDERS);

        if (value != null) {
            setId(value.getId());
            setOwnerId(value.getOwnerId());
            setName(value.getName());
            setDescription(value.getDescription());
            resetChangedOnNotNull();
        }
    }
}
