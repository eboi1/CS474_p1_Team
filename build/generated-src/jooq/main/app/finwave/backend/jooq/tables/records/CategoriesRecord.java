/*
 * This file is generated by jOOQ.
 */
package app.finwave.backend.jooq.tables.records;


import app.finwave.backend.jooq.tables.Categories;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record6;
import org.jooq.Row6;
import org.jooq.impl.UpdatableRecordImpl;
import org.jooq.postgres.extensions.types.Ltree;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class CategoriesRecord extends UpdatableRecordImpl<CategoriesRecord> implements Record6<Long, Integer, Short, Ltree, String, String> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>public.categories.id</code>.
     */
    public CategoriesRecord setId(Long value) {
        set(0, value);
        return this;
    }

    /**
     * Getter for <code>public.categories.id</code>.
     */
    public Long getId() {
        return (Long) get(0);
    }

    /**
     * Setter for <code>public.categories.owner_id</code>.
     */
    public CategoriesRecord setOwnerId(Integer value) {
        set(1, value);
        return this;
    }

    /**
     * Getter for <code>public.categories.owner_id</code>.
     */
    public Integer getOwnerId() {
        return (Integer) get(1);
    }

    /**
     * Setter for <code>public.categories.type</code>.
     */
    public CategoriesRecord setType(Short value) {
        set(2, value);
        return this;
    }

    /**
     * Getter for <code>public.categories.type</code>.
     */
    public Short getType() {
        return (Short) get(2);
    }

    /**
     * Setter for <code>public.categories.parents_tree</code>.
     */
    public CategoriesRecord setParentsTree(Ltree value) {
        set(3, value);
        return this;
    }

    /**
     * Getter for <code>public.categories.parents_tree</code>.
     */
    public Ltree getParentsTree() {
        return (Ltree) get(3);
    }

    /**
     * Setter for <code>public.categories.name</code>.
     */
    public CategoriesRecord setName(String value) {
        set(4, value);
        return this;
    }

    /**
     * Getter for <code>public.categories.name</code>.
     */
    public String getName() {
        return (String) get(4);
    }

    /**
     * Setter for <code>public.categories.description</code>.
     */
    public CategoriesRecord setDescription(String value) {
        set(5, value);
        return this;
    }

    /**
     * Getter for <code>public.categories.description</code>.
     */
    public String getDescription() {
        return (String) get(5);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<Long> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record6 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row6<Long, Integer, Short, Ltree, String, String> fieldsRow() {
        return (Row6) super.fieldsRow();
    }

    @Override
    public Row6<Long, Integer, Short, Ltree, String, String> valuesRow() {
        return (Row6) super.valuesRow();
    }

    @Override
    public Field<Long> field1() {
        return Categories.CATEGORIES.ID;
    }

    @Override
    public Field<Integer> field2() {
        return Categories.CATEGORIES.OWNER_ID;
    }

    @Override
    public Field<Short> field3() {
        return Categories.CATEGORIES.TYPE;
    }

    @Override
    public Field<Ltree> field4() {
        return Categories.CATEGORIES.PARENTS_TREE;
    }

    @Override
    public Field<String> field5() {
        return Categories.CATEGORIES.NAME;
    }

    @Override
    public Field<String> field6() {
        return Categories.CATEGORIES.DESCRIPTION;
    }

    @Override
    public Long component1() {
        return getId();
    }

    @Override
    public Integer component2() {
        return getOwnerId();
    }

    @Override
    public Short component3() {
        return getType();
    }

    @Override
    public Ltree component4() {
        return getParentsTree();
    }

    @Override
    public String component5() {
        return getName();
    }

    @Override
    public String component6() {
        return getDescription();
    }

    @Override
    public Long value1() {
        return getId();
    }

    @Override
    public Integer value2() {
        return getOwnerId();
    }

    @Override
    public Short value3() {
        return getType();
    }

    @Override
    public Ltree value4() {
        return getParentsTree();
    }

    @Override
    public String value5() {
        return getName();
    }

    @Override
    public String value6() {
        return getDescription();
    }

    @Override
    public CategoriesRecord value1(Long value) {
        setId(value);
        return this;
    }

    @Override
    public CategoriesRecord value2(Integer value) {
        setOwnerId(value);
        return this;
    }

    @Override
    public CategoriesRecord value3(Short value) {
        setType(value);
        return this;
    }

    @Override
    public CategoriesRecord value4(Ltree value) {
        setParentsTree(value);
        return this;
    }

    @Override
    public CategoriesRecord value5(String value) {
        setName(value);
        return this;
    }

    @Override
    public CategoriesRecord value6(String value) {
        setDescription(value);
        return this;
    }

    @Override
    public CategoriesRecord values(Long value1, Integer value2, Short value3, Ltree value4, String value5, String value6) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        value6(value6);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached CategoriesRecord
     */
    public CategoriesRecord() {
        super(Categories.CATEGORIES);
    }

    /**
     * Create a detached, initialised CategoriesRecord
     */
    public CategoriesRecord(Long id, Integer ownerId, Short type, Ltree parentsTree, String name, String description) {
        super(Categories.CATEGORIES);

        setId(id);
        setOwnerId(ownerId);
        setType(type);
        setParentsTree(parentsTree);
        setName(name);
        setDescription(description);
        resetChangedOnNotNull();
    }

    /**
     * Create a detached, initialised CategoriesRecord
     */
    public CategoriesRecord(app.finwave.backend.jooq.tables.pojos.Categories value) {
        super(Categories.CATEGORIES);

        if (value != null) {
            setId(value.getId());
            setOwnerId(value.getOwnerId());
            setType(value.getType());
            setParentsTree(value.getParentsTree());
            setName(value.getName());
            setDescription(value.getDescription());
            resetChangedOnNotNull();
        }
    }
}
