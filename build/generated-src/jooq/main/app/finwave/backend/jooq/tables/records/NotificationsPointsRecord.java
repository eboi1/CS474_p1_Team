/*
 * This file is generated by jOOQ.
 */
package app.finwave.backend.jooq.tables.records;


import app.finwave.backend.jooq.tables.NotificationsPoints;

import java.time.OffsetDateTime;

import org.jooq.Field;
import org.jooq.JSONB;
import org.jooq.Record1;
import org.jooq.Record7;
import org.jooq.Row7;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class NotificationsPointsRecord extends UpdatableRecordImpl<NotificationsPointsRecord> implements Record7<Long, Boolean, Integer, Short, OffsetDateTime, JSONB, String> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>public.notifications_points.id</code>.
     */
    public NotificationsPointsRecord setId(Long value) {
        set(0, value);
        return this;
    }

    /**
     * Getter for <code>public.notifications_points.id</code>.
     */
    public Long getId() {
        return (Long) get(0);
    }

    /**
     * Setter for <code>public.notifications_points.is_primary</code>.
     */
    public NotificationsPointsRecord setIsPrimary(Boolean value) {
        set(1, value);
        return this;
    }

    /**
     * Getter for <code>public.notifications_points.is_primary</code>.
     */
    public Boolean getIsPrimary() {
        return (Boolean) get(1);
    }

    /**
     * Setter for <code>public.notifications_points.user_id</code>.
     */
    public NotificationsPointsRecord setUserId(Integer value) {
        set(2, value);
        return this;
    }

    /**
     * Getter for <code>public.notifications_points.user_id</code>.
     */
    public Integer getUserId() {
        return (Integer) get(2);
    }

    /**
     * Setter for <code>public.notifications_points.type</code>.
     */
    public NotificationsPointsRecord setType(Short value) {
        set(3, value);
        return this;
    }

    /**
     * Getter for <code>public.notifications_points.type</code>.
     */
    public Short getType() {
        return (Short) get(3);
    }

    /**
     * Setter for <code>public.notifications_points.created_at</code>.
     */
    public NotificationsPointsRecord setCreatedAt(OffsetDateTime value) {
        set(4, value);
        return this;
    }

    /**
     * Getter for <code>public.notifications_points.created_at</code>.
     */
    public OffsetDateTime getCreatedAt() {
        return (OffsetDateTime) get(4);
    }

    /**
     * Setter for <code>public.notifications_points.data</code>.
     */
    public NotificationsPointsRecord setData(JSONB value) {
        set(5, value);
        return this;
    }

    /**
     * Getter for <code>public.notifications_points.data</code>.
     */
    public JSONB getData() {
        return (JSONB) get(5);
    }

    /**
     * Setter for <code>public.notifications_points.description</code>.
     */
    public NotificationsPointsRecord setDescription(String value) {
        set(6, value);
        return this;
    }

    /**
     * Getter for <code>public.notifications_points.description</code>.
     */
    public String getDescription() {
        return (String) get(6);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<Long> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record7 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row7<Long, Boolean, Integer, Short, OffsetDateTime, JSONB, String> fieldsRow() {
        return (Row7) super.fieldsRow();
    }

    @Override
    public Row7<Long, Boolean, Integer, Short, OffsetDateTime, JSONB, String> valuesRow() {
        return (Row7) super.valuesRow();
    }

    @Override
    public Field<Long> field1() {
        return NotificationsPoints.NOTIFICATIONS_POINTS.ID;
    }

    @Override
    public Field<Boolean> field2() {
        return NotificationsPoints.NOTIFICATIONS_POINTS.IS_PRIMARY;
    }

    @Override
    public Field<Integer> field3() {
        return NotificationsPoints.NOTIFICATIONS_POINTS.USER_ID;
    }

    @Override
    public Field<Short> field4() {
        return NotificationsPoints.NOTIFICATIONS_POINTS.TYPE;
    }

    @Override
    public Field<OffsetDateTime> field5() {
        return NotificationsPoints.NOTIFICATIONS_POINTS.CREATED_AT;
    }

    @Override
    public Field<JSONB> field6() {
        return NotificationsPoints.NOTIFICATIONS_POINTS.DATA;
    }

    @Override
    public Field<String> field7() {
        return NotificationsPoints.NOTIFICATIONS_POINTS.DESCRIPTION;
    }

    @Override
    public Long component1() {
        return getId();
    }

    @Override
    public Boolean component2() {
        return getIsPrimary();
    }

    @Override
    public Integer component3() {
        return getUserId();
    }

    @Override
    public Short component4() {
        return getType();
    }

    @Override
    public OffsetDateTime component5() {
        return getCreatedAt();
    }

    @Override
    public JSONB component6() {
        return getData();
    }

    @Override
    public String component7() {
        return getDescription();
    }

    @Override
    public Long value1() {
        return getId();
    }

    @Override
    public Boolean value2() {
        return getIsPrimary();
    }

    @Override
    public Integer value3() {
        return getUserId();
    }

    @Override
    public Short value4() {
        return getType();
    }

    @Override
    public OffsetDateTime value5() {
        return getCreatedAt();
    }

    @Override
    public JSONB value6() {
        return getData();
    }

    @Override
    public String value7() {
        return getDescription();
    }

    @Override
    public NotificationsPointsRecord value1(Long value) {
        setId(value);
        return this;
    }

    @Override
    public NotificationsPointsRecord value2(Boolean value) {
        setIsPrimary(value);
        return this;
    }

    @Override
    public NotificationsPointsRecord value3(Integer value) {
        setUserId(value);
        return this;
    }

    @Override
    public NotificationsPointsRecord value4(Short value) {
        setType(value);
        return this;
    }

    @Override
    public NotificationsPointsRecord value5(OffsetDateTime value) {
        setCreatedAt(value);
        return this;
    }

    @Override
    public NotificationsPointsRecord value6(JSONB value) {
        setData(value);
        return this;
    }

    @Override
    public NotificationsPointsRecord value7(String value) {
        setDescription(value);
        return this;
    }

    @Override
    public NotificationsPointsRecord values(Long value1, Boolean value2, Integer value3, Short value4, OffsetDateTime value5, JSONB value6, String value7) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        value6(value6);
        value7(value7);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached NotificationsPointsRecord
     */
    public NotificationsPointsRecord() {
        super(NotificationsPoints.NOTIFICATIONS_POINTS);
    }

    /**
     * Create a detached, initialised NotificationsPointsRecord
     */
    public NotificationsPointsRecord(Long id, Boolean isPrimary, Integer userId, Short type, OffsetDateTime createdAt, JSONB data, String description) {
        super(NotificationsPoints.NOTIFICATIONS_POINTS);

        setId(id);
        setIsPrimary(isPrimary);
        setUserId(userId);
        setType(type);
        setCreatedAt(createdAt);
        setData(data);
        setDescription(description);
        resetChangedOnNotNull();
    }

    /**
     * Create a detached, initialised NotificationsPointsRecord
     */
    public NotificationsPointsRecord(app.finwave.backend.jooq.tables.pojos.NotificationsPoints value) {
        super(NotificationsPoints.NOTIFICATIONS_POINTS);

        if (value != null) {
            setId(value.getId());
            setIsPrimary(value.getIsPrimary());
            setUserId(value.getUserId());
            setType(value.getType());
            setCreatedAt(value.getCreatedAt());
            setData(value.getData());
            setDescription(value.getDescription());
            resetChangedOnNotNull();
        }
    }
}
