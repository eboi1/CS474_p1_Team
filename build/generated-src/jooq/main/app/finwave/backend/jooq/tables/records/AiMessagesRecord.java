/*
 * This file is generated by jOOQ.
 */
package app.finwave.backend.jooq.tables.records;


import app.finwave.backend.jooq.tables.AiMessages;

import org.jooq.Field;
import org.jooq.JSON;
import org.jooq.Record1;
import org.jooq.Record4;
import org.jooq.Row4;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class AiMessagesRecord extends UpdatableRecordImpl<AiMessagesRecord> implements Record4<Long, Long, String, JSON> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>public.ai_messages.id</code>.
     */
    public AiMessagesRecord setId(Long value) {
        set(0, value);
        return this;
    }

    /**
     * Getter for <code>public.ai_messages.id</code>.
     */
    public Long getId() {
        return (Long) get(0);
    }

    /**
     * Setter for <code>public.ai_messages.ai_context</code>.
     */
    public AiMessagesRecord setAiContext(Long value) {
        set(1, value);
        return this;
    }

    /**
     * Getter for <code>public.ai_messages.ai_context</code>.
     */
    public Long getAiContext() {
        return (Long) get(1);
    }

    /**
     * Setter for <code>public.ai_messages.role</code>.
     */
    public AiMessagesRecord setRole(String value) {
        set(2, value);
        return this;
    }

    /**
     * Getter for <code>public.ai_messages.role</code>.
     */
    public String getRole() {
        return (String) get(2);
    }

    /**
     * Setter for <code>public.ai_messages.content</code>.
     */
    public AiMessagesRecord setContent(JSON value) {
        set(3, value);
        return this;
    }

    /**
     * Getter for <code>public.ai_messages.content</code>.
     */
    public JSON getContent() {
        return (JSON) get(3);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<Long> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record4 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row4<Long, Long, String, JSON> fieldsRow() {
        return (Row4) super.fieldsRow();
    }

    @Override
    public Row4<Long, Long, String, JSON> valuesRow() {
        return (Row4) super.valuesRow();
    }

    @Override
    public Field<Long> field1() {
        return AiMessages.AI_MESSAGES.ID;
    }

    @Override
    public Field<Long> field2() {
        return AiMessages.AI_MESSAGES.AI_CONTEXT;
    }

    @Override
    public Field<String> field3() {
        return AiMessages.AI_MESSAGES.ROLE;
    }

    @Override
    public Field<JSON> field4() {
        return AiMessages.AI_MESSAGES.CONTENT;
    }

    @Override
    public Long component1() {
        return getId();
    }

    @Override
    public Long component2() {
        return getAiContext();
    }

    @Override
    public String component3() {
        return getRole();
    }

    @Override
    public JSON component4() {
        return getContent();
    }

    @Override
    public Long value1() {
        return getId();
    }

    @Override
    public Long value2() {
        return getAiContext();
    }

    @Override
    public String value3() {
        return getRole();
    }

    @Override
    public JSON value4() {
        return getContent();
    }

    @Override
    public AiMessagesRecord value1(Long value) {
        setId(value);
        return this;
    }

    @Override
    public AiMessagesRecord value2(Long value) {
        setAiContext(value);
        return this;
    }

    @Override
    public AiMessagesRecord value3(String value) {
        setRole(value);
        return this;
    }

    @Override
    public AiMessagesRecord value4(JSON value) {
        setContent(value);
        return this;
    }

    @Override
    public AiMessagesRecord values(Long value1, Long value2, String value3, JSON value4) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached AiMessagesRecord
     */
    public AiMessagesRecord() {
        super(AiMessages.AI_MESSAGES);
    }

    /**
     * Create a detached, initialised AiMessagesRecord
     */
    public AiMessagesRecord(Long id, Long aiContext, String role, JSON content) {
        super(AiMessages.AI_MESSAGES);

        setId(id);
        setAiContext(aiContext);
        setRole(role);
        setContent(content);
        resetChangedOnNotNull();
    }

    /**
     * Create a detached, initialised AiMessagesRecord
     */
    public AiMessagesRecord(app.finwave.backend.jooq.tables.pojos.AiMessages value) {
        super(AiMessages.AI_MESSAGES);

        if (value != null) {
            setId(value.getId());
            setAiContext(value.getAiContext());
            setRole(value.getRole());
            setContent(value.getContent());
            resetChangedOnNotNull();
        }
    }
}
