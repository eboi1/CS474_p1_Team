/*
 * This file is generated by jOOQ.
 */
package app.finwave.backend.jooq.tables.records;


import app.finwave.backend.jooq.tables.Transactions;

import java.math.BigDecimal;
import java.time.OffsetDateTime;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record9;
import org.jooq.Row9;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class TransactionsRecord extends UpdatableRecordImpl<TransactionsRecord> implements Record9<Long, Integer, Long, Long, Long, OffsetDateTime, BigDecimal, String, Long> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>public.transactions.id</code>.
     */
    public TransactionsRecord setId(Long value) {
        set(0, value);
        return this;
    }

    /**
     * Getter for <code>public.transactions.id</code>.
     */
    public Long getId() {
        return (Long) get(0);
    }

    /**
     * Setter for <code>public.transactions.owner_id</code>.
     */
    public TransactionsRecord setOwnerId(Integer value) {
        set(1, value);
        return this;
    }

    /**
     * Getter for <code>public.transactions.owner_id</code>.
     */
    public Integer getOwnerId() {
        return (Integer) get(1);
    }

    /**
     * Setter for <code>public.transactions.category_id</code>.
     */
    public TransactionsRecord setCategoryId(Long value) {
        set(2, value);
        return this;
    }

    /**
     * Getter for <code>public.transactions.category_id</code>.
     */
    public Long getCategoryId() {
        return (Long) get(2);
    }

    /**
     * Setter for <code>public.transactions.account_id</code>.
     */
    public TransactionsRecord setAccountId(Long value) {
        set(3, value);
        return this;
    }

    /**
     * Getter for <code>public.transactions.account_id</code>.
     */
    public Long getAccountId() {
        return (Long) get(3);
    }

    /**
     * Setter for <code>public.transactions.currency_id</code>.
     */
    public TransactionsRecord setCurrencyId(Long value) {
        set(4, value);
        return this;
    }

    /**
     * Getter for <code>public.transactions.currency_id</code>.
     */
    public Long getCurrencyId() {
        return (Long) get(4);
    }

    /**
     * Setter for <code>public.transactions.created_at</code>.
     */
    public TransactionsRecord setCreatedAt(OffsetDateTime value) {
        set(5, value);
        return this;
    }

    /**
     * Getter for <code>public.transactions.created_at</code>.
     */
    public OffsetDateTime getCreatedAt() {
        return (OffsetDateTime) get(5);
    }

    /**
     * Setter for <code>public.transactions.delta</code>.
     */
    public TransactionsRecord setDelta(BigDecimal value) {
        set(6, value);
        return this;
    }

    /**
     * Getter for <code>public.transactions.delta</code>.
     */
    public BigDecimal getDelta() {
        return (BigDecimal) get(6);
    }

    /**
     * Setter for <code>public.transactions.description</code>.
     */
    public TransactionsRecord setDescription(String value) {
        set(7, value);
        return this;
    }

    /**
     * Getter for <code>public.transactions.description</code>.
     */
    public String getDescription() {
        return (String) get(7);
    }

    /**
     * Setter for <code>public.transactions.metadata_id</code>.
     */
    public TransactionsRecord setMetadataId(Long value) {
        set(8, value);
        return this;
    }

    /**
     * Getter for <code>public.transactions.metadata_id</code>.
     */
    public Long getMetadataId() {
        return (Long) get(8);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<Long> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record9 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row9<Long, Integer, Long, Long, Long, OffsetDateTime, BigDecimal, String, Long> fieldsRow() {
        return (Row9) super.fieldsRow();
    }

    @Override
    public Row9<Long, Integer, Long, Long, Long, OffsetDateTime, BigDecimal, String, Long> valuesRow() {
        return (Row9) super.valuesRow();
    }

    @Override
    public Field<Long> field1() {
        return Transactions.TRANSACTIONS.ID;
    }

    @Override
    public Field<Integer> field2() {
        return Transactions.TRANSACTIONS.OWNER_ID;
    }

    @Override
    public Field<Long> field3() {
        return Transactions.TRANSACTIONS.CATEGORY_ID;
    }

    @Override
    public Field<Long> field4() {
        return Transactions.TRANSACTIONS.ACCOUNT_ID;
    }

    @Override
    public Field<Long> field5() {
        return Transactions.TRANSACTIONS.CURRENCY_ID;
    }

    @Override
    public Field<OffsetDateTime> field6() {
        return Transactions.TRANSACTIONS.CREATED_AT;
    }

    @Override
    public Field<BigDecimal> field7() {
        return Transactions.TRANSACTIONS.DELTA;
    }

    @Override
    public Field<String> field8() {
        return Transactions.TRANSACTIONS.DESCRIPTION;
    }

    @Override
    public Field<Long> field9() {
        return Transactions.TRANSACTIONS.METADATA_ID;
    }

    @Override
    public Long component1() {
        return getId();
    }

    @Override
    public Integer component2() {
        return getOwnerId();
    }

    @Override
    public Long component3() {
        return getCategoryId();
    }

    @Override
    public Long component4() {
        return getAccountId();
    }

    @Override
    public Long component5() {
        return getCurrencyId();
    }

    @Override
    public OffsetDateTime component6() {
        return getCreatedAt();
    }

    @Override
    public BigDecimal component7() {
        return getDelta();
    }

    @Override
    public String component8() {
        return getDescription();
    }

    @Override
    public Long component9() {
        return getMetadataId();
    }

    @Override
    public Long value1() {
        return getId();
    }

    @Override
    public Integer value2() {
        return getOwnerId();
    }

    @Override
    public Long value3() {
        return getCategoryId();
    }

    @Override
    public Long value4() {
        return getAccountId();
    }

    @Override
    public Long value5() {
        return getCurrencyId();
    }

    @Override
    public OffsetDateTime value6() {
        return getCreatedAt();
    }

    @Override
    public BigDecimal value7() {
        return getDelta();
    }

    @Override
    public String value8() {
        return getDescription();
    }

    @Override
    public Long value9() {
        return getMetadataId();
    }

    @Override
    public TransactionsRecord value1(Long value) {
        setId(value);
        return this;
    }

    @Override
    public TransactionsRecord value2(Integer value) {
        setOwnerId(value);
        return this;
    }

    @Override
    public TransactionsRecord value3(Long value) {
        setCategoryId(value);
        return this;
    }

    @Override
    public TransactionsRecord value4(Long value) {
        setAccountId(value);
        return this;
    }

    @Override
    public TransactionsRecord value5(Long value) {
        setCurrencyId(value);
        return this;
    }

    @Override
    public TransactionsRecord value6(OffsetDateTime value) {
        setCreatedAt(value);
        return this;
    }

    @Override
    public TransactionsRecord value7(BigDecimal value) {
        setDelta(value);
        return this;
    }

    @Override
    public TransactionsRecord value8(String value) {
        setDescription(value);
        return this;
    }

    @Override
    public TransactionsRecord value9(Long value) {
        setMetadataId(value);
        return this;
    }

    @Override
    public TransactionsRecord values(Long value1, Integer value2, Long value3, Long value4, Long value5, OffsetDateTime value6, BigDecimal value7, String value8, Long value9) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        value6(value6);
        value7(value7);
        value8(value8);
        value9(value9);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached TransactionsRecord
     */
    public TransactionsRecord() {
        super(Transactions.TRANSACTIONS);
    }

    /**
     * Create a detached, initialised TransactionsRecord
     */
    public TransactionsRecord(Long id, Integer ownerId, Long categoryId, Long accountId, Long currencyId, OffsetDateTime createdAt, BigDecimal delta, String description, Long metadataId) {
        super(Transactions.TRANSACTIONS);

        setId(id);
        setOwnerId(ownerId);
        setCategoryId(categoryId);
        setAccountId(accountId);
        setCurrencyId(currencyId);
        setCreatedAt(createdAt);
        setDelta(delta);
        setDescription(description);
        setMetadataId(metadataId);
        resetChangedOnNotNull();
    }

    /**
     * Create a detached, initialised TransactionsRecord
     */
    public TransactionsRecord(app.finwave.backend.jooq.tables.pojos.Transactions value) {
        super(Transactions.TRANSACTIONS);

        if (value != null) {
            setId(value.getId());
            setOwnerId(value.getOwnerId());
            setCategoryId(value.getCategoryId());
            setAccountId(value.getAccountId());
            setCurrencyId(value.getCurrencyId());
            setCreatedAt(value.getCreatedAt());
            setDelta(value.getDelta());
            setDescription(value.getDescription());
            setMetadataId(value.getMetadataId());
            resetChangedOnNotNull();
        }
    }
}
