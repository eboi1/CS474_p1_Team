/*
 * This file is generated by jOOQ.
 */
package app.finwave.backend.jooq;


import app.finwave.backend.jooq.routines.Index1;
import app.finwave.backend.jooq.routines.Index2;
import app.finwave.backend.jooq.routines.Lca1;
import app.finwave.backend.jooq.routines.Lca2;
import app.finwave.backend.jooq.routines.Lca3;
import app.finwave.backend.jooq.routines.Lca4;
import app.finwave.backend.jooq.routines.Lca5;
import app.finwave.backend.jooq.routines.Lca6;
import app.finwave.backend.jooq.routines.Lca7;
import app.finwave.backend.jooq.routines.Lca8;
import app.finwave.backend.jooq.routines.LqueryIn;
import app.finwave.backend.jooq.routines.LqueryOut;
import app.finwave.backend.jooq.routines.LqueryRecv;
import app.finwave.backend.jooq.routines.LquerySend;
import app.finwave.backend.jooq.routines.LtQRegex;
import app.finwave.backend.jooq.routines.LtQRregex;
import app.finwave.backend.jooq.routines.Ltree2text;
import app.finwave.backend.jooq.routines.LtreeAddltree;
import app.finwave.backend.jooq.routines.LtreeAddtext;
import app.finwave.backend.jooq.routines.LtreeCmp;
import app.finwave.backend.jooq.routines.LtreeCompress;
import app.finwave.backend.jooq.routines.LtreeConsistent;
import app.finwave.backend.jooq.routines.LtreeDecompress;
import app.finwave.backend.jooq.routines.LtreeEq;
import app.finwave.backend.jooq.routines.LtreeGe;
import app.finwave.backend.jooq.routines.LtreeGistIn;
import app.finwave.backend.jooq.routines.LtreeGistOptions;
import app.finwave.backend.jooq.routines.LtreeGistOut;
import app.finwave.backend.jooq.routines.LtreeGt;
import app.finwave.backend.jooq.routines.LtreeIn;
import app.finwave.backend.jooq.routines.LtreeIsparent;
import app.finwave.backend.jooq.routines.LtreeLe;
import app.finwave.backend.jooq.routines.LtreeLt;
import app.finwave.backend.jooq.routines.LtreeNe;
import app.finwave.backend.jooq.routines.LtreeOut;
import app.finwave.backend.jooq.routines.LtreePenalty;
import app.finwave.backend.jooq.routines.LtreePicksplit;
import app.finwave.backend.jooq.routines.LtreeRecv;
import app.finwave.backend.jooq.routines.LtreeRisparent;
import app.finwave.backend.jooq.routines.LtreeSame;
import app.finwave.backend.jooq.routines.LtreeSend;
import app.finwave.backend.jooq.routines.LtreeTextadd;
import app.finwave.backend.jooq.routines.LtreeUnion;
import app.finwave.backend.jooq.routines.Ltreeparentsel;
import app.finwave.backend.jooq.routines.LtxtqExec;
import app.finwave.backend.jooq.routines.LtxtqIn;
import app.finwave.backend.jooq.routines.LtxtqOut;
import app.finwave.backend.jooq.routines.LtxtqRecv;
import app.finwave.backend.jooq.routines.LtxtqRexec;
import app.finwave.backend.jooq.routines.LtxtqSend;
import app.finwave.backend.jooq.routines.Nlevel;
import app.finwave.backend.jooq.routines.Subltree;
import app.finwave.backend.jooq.routines.Subpath1;
import app.finwave.backend.jooq.routines.Subpath2;
import app.finwave.backend.jooq.routines.Text2ltree;
import app.finwave.backend.jooq.routines._LtQRegex;
import app.finwave.backend.jooq.routines._LtQRregex;
import app.finwave.backend.jooq.routines._LtqExtractRegex;
import app.finwave.backend.jooq.routines._LtreeCompress;
import app.finwave.backend.jooq.routines._LtreeConsistent;
import app.finwave.backend.jooq.routines._LtreeExtractIsparent;
import app.finwave.backend.jooq.routines._LtreeExtractRisparent;
import app.finwave.backend.jooq.routines._LtreeGistOptions;
import app.finwave.backend.jooq.routines._LtreeIsparent;
import app.finwave.backend.jooq.routines._LtreePenalty;
import app.finwave.backend.jooq.routines._LtreePicksplit;
import app.finwave.backend.jooq.routines._LtreeRIsparent;
import app.finwave.backend.jooq.routines._LtreeRRisparent;
import app.finwave.backend.jooq.routines._LtreeSame;
import app.finwave.backend.jooq.routines._LtreeUnion;
import app.finwave.backend.jooq.routines._LtxtqExec;
import app.finwave.backend.jooq.routines._LtxtqExtractExec;
import app.finwave.backend.jooq.routines._LtxtqRexec;

import org.jooq.Configuration;
import org.jooq.Field;
import org.jooq.postgres.extensions.types.Ltree;


/**
 * Convenience access to all stored procedures and functions in public.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Routines {

    /**
     * Call <code>public._lt_q_regex</code>
     */
    public static Boolean _LtQRegex(
          Configuration configuration
        , Ltree[] __1
        , Object[] __2
    ) {
        _LtQRegex f = new _LtQRegex();
        f.set__1(__1);
        f.set__2(__2);

        f.execute(configuration);
        return f.getReturnValue();
    }

    /**
     * Get <code>public._lt_q_regex</code> as a field.
     */
    public static Field<Boolean> _LtQRegex(
          Ltree[] __1
        , Object[] __2
    ) {
        _LtQRegex f = new _LtQRegex();
        f.set__1(__1);
        f.set__2(__2);

        return f.asField();
    }

    /**
     * Get <code>public._lt_q_regex</code> as a field.
     */
    public static Field<Boolean> _LtQRegex(
          Field<Ltree[]> __1
        , Field<Object[]> __2
    ) {
        _LtQRegex f = new _LtQRegex();
        f.set__1(__1);
        f.set__2(__2);

        return f.asField();
    }

    /**
     * Call <code>public._lt_q_rregex</code>
     */
    public static Boolean _LtQRregex(
          Configuration configuration
        , Object[] __1
        , Ltree[] __2
    ) {
        _LtQRregex f = new _LtQRregex();
        f.set__1(__1);
        f.set__2(__2);

        f.execute(configuration);
        return f.getReturnValue();
    }

    /**
     * Get <code>public._lt_q_rregex</code> as a field.
     */
    public static Field<Boolean> _LtQRregex(
          Object[] __1
        , Ltree[] __2
    ) {
        _LtQRregex f = new _LtQRregex();
        f.set__1(__1);
        f.set__2(__2);

        return f.asField();
    }

    /**
     * Get <code>public._lt_q_rregex</code> as a field.
     */
    public static Field<Boolean> _LtQRregex(
          Field<Object[]> __1
        , Field<Ltree[]> __2
    ) {
        _LtQRregex f = new _LtQRregex();
        f.set__1(__1);
        f.set__2(__2);

        return f.asField();
    }

    /**
     * @deprecated Unknown data type. Parameter type or return type is unknown.
     * If this is a qualified, user-defined type, it may have been excluded from
     * code generation. If this is a built-in type, you can define an explicit
     * {@link org.jooq.Binding} to specify how this type should be handled.
     * Deprecation can be turned off using {@literal
     * <deprecationOnUnknownTypes/>} in your code generator configuration.
     */
    @Deprecated
    public static Ltree _LtqExtractRegex(
          Configuration configuration
        , Ltree[] __1
        , Object __2
    ) {
        _LtqExtractRegex f = new _LtqExtractRegex();
        f.set__1(__1);
        f.set__2(__2);

        f.execute(configuration);
        return f.getReturnValue();
    }

    /**
     * @deprecated Unknown data type. Parameter type or return type is unknown.
     * If this is a qualified, user-defined type, it may have been excluded from
     * code generation. If this is a built-in type, you can define an explicit
     * {@link org.jooq.Binding} to specify how this type should be handled.
     * Deprecation can be turned off using {@literal
     * <deprecationOnUnknownTypes/>} in your code generator configuration.
     */
    @Deprecated
    public static Field<Ltree> _LtqExtractRegex(
          Ltree[] __1
        , Object __2
    ) {
        _LtqExtractRegex f = new _LtqExtractRegex();
        f.set__1(__1);
        f.set__2(__2);

        return f.asField();
    }

    /**
     * @deprecated Unknown data type. Parameter type or return type is unknown.
     * If this is a qualified, user-defined type, it may have been excluded from
     * code generation. If this is a built-in type, you can define an explicit
     * {@link org.jooq.Binding} to specify how this type should be handled.
     * Deprecation can be turned off using {@literal
     * <deprecationOnUnknownTypes/>} in your code generator configuration.
     */
    @Deprecated
    public static Field<Ltree> _LtqExtractRegex(
          Field<Ltree[]> __1
        , Field<Object> __2
    ) {
        _LtqExtractRegex f = new _LtqExtractRegex();
        f.set__1(__1);
        f.set__2(__2);

        return f.asField();
    }

    /**
     * @deprecated Unknown data type. If this is a qualified, user-defined type,
     * it may have been excluded from code generation. If this is a built-in
     * type, you can define an explicit {@link org.jooq.Binding} to specify how
     * this type should be handled. Deprecation can be turned off using
     * {@literal <deprecationOnUnknownTypes/>} in your code generator
     * configuration.
     */
    @Deprecated
    public static Object _LtreeCompress(
          Configuration configuration
        , Object __1
    ) {
        _LtreeCompress f = new _LtreeCompress();
        f.set__1(__1);

        f.execute(configuration);
        return f.getReturnValue();
    }

    /**
     * @deprecated Unknown data type. If this is a qualified, user-defined type,
     * it may have been excluded from code generation. If this is a built-in
     * type, you can define an explicit {@link org.jooq.Binding} to specify how
     * this type should be handled. Deprecation can be turned off using
     * {@literal <deprecationOnUnknownTypes/>} in your code generator
     * configuration.
     */
    @Deprecated
    public static Field<Object> _LtreeCompress(
          Object __1
    ) {
        _LtreeCompress f = new _LtreeCompress();
        f.set__1(__1);

        return f.asField();
    }

    /**
     * @deprecated Unknown data type. If this is a qualified, user-defined type,
     * it may have been excluded from code generation. If this is a built-in
     * type, you can define an explicit {@link org.jooq.Binding} to specify how
     * this type should be handled. Deprecation can be turned off using
     * {@literal <deprecationOnUnknownTypes/>} in your code generator
     * configuration.
     */
    @Deprecated
    public static Field<Object> _LtreeCompress(
          Field<Object> __1
    ) {
        _LtreeCompress f = new _LtreeCompress();
        f.set__1(__1);

        return f.asField();
    }

    /**
     * @deprecated Unknown data type. Parameter type or return type is unknown.
     * If this is a qualified, user-defined type, it may have been excluded from
     * code generation. If this is a built-in type, you can define an explicit
     * {@link org.jooq.Binding} to specify how this type should be handled.
     * Deprecation can be turned off using {@literal
     * <deprecationOnUnknownTypes/>} in your code generator configuration.
     */
    @Deprecated
    public static Boolean _LtreeConsistent(
          Configuration configuration
        , Object __1
        , Ltree[] __2
        , Short __3
        , Long __4
        , Object __5
    ) {
        _LtreeConsistent f = new _LtreeConsistent();
        f.set__1(__1);
        f.set__2(__2);
        f.set__3(__3);
        f.set__4(__4);
        f.set__5(__5);

        f.execute(configuration);
        return f.getReturnValue();
    }

    /**
     * @deprecated Unknown data type. Parameter type or return type is unknown.
     * If this is a qualified, user-defined type, it may have been excluded from
     * code generation. If this is a built-in type, you can define an explicit
     * {@link org.jooq.Binding} to specify how this type should be handled.
     * Deprecation can be turned off using {@literal
     * <deprecationOnUnknownTypes/>} in your code generator configuration.
     */
    @Deprecated
    public static Field<Boolean> _LtreeConsistent(
          Object __1
        , Ltree[] __2
        , Short __3
        , Long __4
        , Object __5
    ) {
        _LtreeConsistent f = new _LtreeConsistent();
        f.set__1(__1);
        f.set__2(__2);
        f.set__3(__3);
        f.set__4(__4);
        f.set__5(__5);

        return f.asField();
    }

    /**
     * @deprecated Unknown data type. Parameter type or return type is unknown.
     * If this is a qualified, user-defined type, it may have been excluded from
     * code generation. If this is a built-in type, you can define an explicit
     * {@link org.jooq.Binding} to specify how this type should be handled.
     * Deprecation can be turned off using {@literal
     * <deprecationOnUnknownTypes/>} in your code generator configuration.
     */
    @Deprecated
    public static Field<Boolean> _LtreeConsistent(
          Field<Object> __1
        , Field<Ltree[]> __2
        , Field<Short> __3
        , Field<Long> __4
        , Field<Object> __5
    ) {
        _LtreeConsistent f = new _LtreeConsistent();
        f.set__1(__1);
        f.set__2(__2);
        f.set__3(__3);
        f.set__4(__4);
        f.set__5(__5);

        return f.asField();
    }

    /**
     * Call <code>public._ltree_extract_isparent</code>
     */
    public static Ltree _LtreeExtractIsparent(
          Configuration configuration
        , Ltree[] __1
        , Ltree __2
    ) {
        _LtreeExtractIsparent f = new _LtreeExtractIsparent();
        f.set__1(__1);
        f.set__2(__2);

        f.execute(configuration);
        return f.getReturnValue();
    }

    /**
     * Get <code>public._ltree_extract_isparent</code> as a field.
     */
    public static Field<Ltree> _LtreeExtractIsparent(
          Ltree[] __1
        , Ltree __2
    ) {
        _LtreeExtractIsparent f = new _LtreeExtractIsparent();
        f.set__1(__1);
        f.set__2(__2);

        return f.asField();
    }

    /**
     * Get <code>public._ltree_extract_isparent</code> as a field.
     */
    public static Field<Ltree> _LtreeExtractIsparent(
          Field<Ltree[]> __1
        , Field<Ltree> __2
    ) {
        _LtreeExtractIsparent f = new _LtreeExtractIsparent();
        f.set__1(__1);
        f.set__2(__2);

        return f.asField();
    }

    /**
     * Call <code>public._ltree_extract_risparent</code>
     */
    public static Ltree _LtreeExtractRisparent(
          Configuration configuration
        , Ltree[] __1
        , Ltree __2
    ) {
        _LtreeExtractRisparent f = new _LtreeExtractRisparent();
        f.set__1(__1);
        f.set__2(__2);

        f.execute(configuration);
        return f.getReturnValue();
    }

    /**
     * Get <code>public._ltree_extract_risparent</code> as a field.
     */
    public static Field<Ltree> _LtreeExtractRisparent(
          Ltree[] __1
        , Ltree __2
    ) {
        _LtreeExtractRisparent f = new _LtreeExtractRisparent();
        f.set__1(__1);
        f.set__2(__2);

        return f.asField();
    }

    /**
     * Get <code>public._ltree_extract_risparent</code> as a field.
     */
    public static Field<Ltree> _LtreeExtractRisparent(
          Field<Ltree[]> __1
        , Field<Ltree> __2
    ) {
        _LtreeExtractRisparent f = new _LtreeExtractRisparent();
        f.set__1(__1);
        f.set__2(__2);

        return f.asField();
    }

    /**
     * @deprecated Unknown data type. Parameter type or return type is unknown.
     * If this is a qualified, user-defined type, it may have been excluded from
     * code generation. If this is a built-in type, you can define an explicit
     * {@link org.jooq.Binding} to specify how this type should be handled.
     * Deprecation can be turned off using {@literal
     * <deprecationOnUnknownTypes/>} in your code generator configuration.
     */
    @Deprecated
    public static void _LtreeGistOptions(
          Configuration configuration
        , Object __1
    ) {
        _LtreeGistOptions p = new _LtreeGistOptions();
        p.set__1(__1);

        p.execute(configuration);
    }

    /**
     * Call <code>public._ltree_isparent</code>
     */
    public static Boolean _LtreeIsparent(
          Configuration configuration
        , Ltree[] __1
        , Ltree __2
    ) {
        _LtreeIsparent f = new _LtreeIsparent();
        f.set__1(__1);
        f.set__2(__2);

        f.execute(configuration);
        return f.getReturnValue();
    }

    /**
     * Get <code>public._ltree_isparent</code> as a field.
     */
    public static Field<Boolean> _LtreeIsparent(
          Ltree[] __1
        , Ltree __2
    ) {
        _LtreeIsparent f = new _LtreeIsparent();
        f.set__1(__1);
        f.set__2(__2);

        return f.asField();
    }

    /**
     * Get <code>public._ltree_isparent</code> as a field.
     */
    public static Field<Boolean> _LtreeIsparent(
          Field<Ltree[]> __1
        , Field<Ltree> __2
    ) {
        _LtreeIsparent f = new _LtreeIsparent();
        f.set__1(__1);
        f.set__2(__2);

        return f.asField();
    }

    /**
     * @deprecated Unknown data type. If this is a qualified, user-defined type,
     * it may have been excluded from code generation. If this is a built-in
     * type, you can define an explicit {@link org.jooq.Binding} to specify how
     * this type should be handled. Deprecation can be turned off using
     * {@literal <deprecationOnUnknownTypes/>} in your code generator
     * configuration.
     */
    @Deprecated
    public static Object _LtreePenalty(
          Configuration configuration
        , Object __1
        , Object __2
        , Object __3
    ) {
        _LtreePenalty f = new _LtreePenalty();
        f.set__1(__1);
        f.set__2(__2);
        f.set__3(__3);

        f.execute(configuration);
        return f.getReturnValue();
    }

    /**
     * @deprecated Unknown data type. If this is a qualified, user-defined type,
     * it may have been excluded from code generation. If this is a built-in
     * type, you can define an explicit {@link org.jooq.Binding} to specify how
     * this type should be handled. Deprecation can be turned off using
     * {@literal <deprecationOnUnknownTypes/>} in your code generator
     * configuration.
     */
    @Deprecated
    public static Field<Object> _LtreePenalty(
          Object __1
        , Object __2
        , Object __3
    ) {
        _LtreePenalty f = new _LtreePenalty();
        f.set__1(__1);
        f.set__2(__2);
        f.set__3(__3);

        return f.asField();
    }

    /**
     * @deprecated Unknown data type. If this is a qualified, user-defined type,
     * it may have been excluded from code generation. If this is a built-in
     * type, you can define an explicit {@link org.jooq.Binding} to specify how
     * this type should be handled. Deprecation can be turned off using
     * {@literal <deprecationOnUnknownTypes/>} in your code generator
     * configuration.
     */
    @Deprecated
    public static Field<Object> _LtreePenalty(
          Field<Object> __1
        , Field<Object> __2
        , Field<Object> __3
    ) {
        _LtreePenalty f = new _LtreePenalty();
        f.set__1(__1);
        f.set__2(__2);
        f.set__3(__3);

        return f.asField();
    }

    /**
     * @deprecated Unknown data type. If this is a qualified, user-defined type,
     * it may have been excluded from code generation. If this is a built-in
     * type, you can define an explicit {@link org.jooq.Binding} to specify how
     * this type should be handled. Deprecation can be turned off using
     * {@literal <deprecationOnUnknownTypes/>} in your code generator
     * configuration.
     */
    @Deprecated
    public static Object _LtreePicksplit(
          Configuration configuration
        , Object __1
        , Object __2
    ) {
        _LtreePicksplit f = new _LtreePicksplit();
        f.set__1(__1);
        f.set__2(__2);

        f.execute(configuration);
        return f.getReturnValue();
    }

    /**
     * @deprecated Unknown data type. If this is a qualified, user-defined type,
     * it may have been excluded from code generation. If this is a built-in
     * type, you can define an explicit {@link org.jooq.Binding} to specify how
     * this type should be handled. Deprecation can be turned off using
     * {@literal <deprecationOnUnknownTypes/>} in your code generator
     * configuration.
     */
    @Deprecated
    public static Field<Object> _LtreePicksplit(
          Object __1
        , Object __2
    ) {
        _LtreePicksplit f = new _LtreePicksplit();
        f.set__1(__1);
        f.set__2(__2);

        return f.asField();
    }

    /**
     * @deprecated Unknown data type. If this is a qualified, user-defined type,
     * it may have been excluded from code generation. If this is a built-in
     * type, you can define an explicit {@link org.jooq.Binding} to specify how
     * this type should be handled. Deprecation can be turned off using
     * {@literal <deprecationOnUnknownTypes/>} in your code generator
     * configuration.
     */
    @Deprecated
    public static Field<Object> _LtreePicksplit(
          Field<Object> __1
        , Field<Object> __2
    ) {
        _LtreePicksplit f = new _LtreePicksplit();
        f.set__1(__1);
        f.set__2(__2);

        return f.asField();
    }

    /**
     * Call <code>public._ltree_r_isparent</code>
     */
    public static Boolean _LtreeRIsparent(
          Configuration configuration
        , Ltree __1
        , Ltree[] __2
    ) {
        _LtreeRIsparent f = new _LtreeRIsparent();
        f.set__1(__1);
        f.set__2(__2);

        f.execute(configuration);
        return f.getReturnValue();
    }

    /**
     * Get <code>public._ltree_r_isparent</code> as a field.
     */
    public static Field<Boolean> _LtreeRIsparent(
          Ltree __1
        , Ltree[] __2
    ) {
        _LtreeRIsparent f = new _LtreeRIsparent();
        f.set__1(__1);
        f.set__2(__2);

        return f.asField();
    }

    /**
     * Get <code>public._ltree_r_isparent</code> as a field.
     */
    public static Field<Boolean> _LtreeRIsparent(
          Field<Ltree> __1
        , Field<Ltree[]> __2
    ) {
        _LtreeRIsparent f = new _LtreeRIsparent();
        f.set__1(__1);
        f.set__2(__2);

        return f.asField();
    }

    /**
     * Call <code>public._ltree_r_risparent</code>
     */
    public static Boolean _LtreeRRisparent(
          Configuration configuration
        , Ltree __1
        , Ltree[] __2
    ) {
        _LtreeRRisparent f = new _LtreeRRisparent();
        f.set__1(__1);
        f.set__2(__2);

        f.execute(configuration);
        return f.getReturnValue();
    }

    /**
     * Get <code>public._ltree_r_risparent</code> as a field.
     */
    public static Field<Boolean> _LtreeRRisparent(
          Ltree __1
        , Ltree[] __2
    ) {
        _LtreeRRisparent f = new _LtreeRRisparent();
        f.set__1(__1);
        f.set__2(__2);

        return f.asField();
    }

    /**
     * Get <code>public._ltree_r_risparent</code> as a field.
     */
    public static Field<Boolean> _LtreeRRisparent(
          Field<Ltree> __1
        , Field<Ltree[]> __2
    ) {
        _LtreeRRisparent f = new _LtreeRRisparent();
        f.set__1(__1);
        f.set__2(__2);

        return f.asField();
    }

    /**
     * @deprecated Unknown data type. If this is a qualified, user-defined type,
     * it may have been excluded from code generation. If this is a built-in
     * type, you can define an explicit {@link org.jooq.Binding} to specify how
     * this type should be handled. Deprecation can be turned off using
     * {@literal <deprecationOnUnknownTypes/>} in your code generator
     * configuration.
     */
    @Deprecated
    public static Object _LtreeSame(
          Configuration configuration
        , Object __1
        , Object __2
        , Object __3
    ) {
        _LtreeSame f = new _LtreeSame();
        f.set__1(__1);
        f.set__2(__2);
        f.set__3(__3);

        f.execute(configuration);
        return f.getReturnValue();
    }

    /**
     * @deprecated Unknown data type. If this is a qualified, user-defined type,
     * it may have been excluded from code generation. If this is a built-in
     * type, you can define an explicit {@link org.jooq.Binding} to specify how
     * this type should be handled. Deprecation can be turned off using
     * {@literal <deprecationOnUnknownTypes/>} in your code generator
     * configuration.
     */
    @Deprecated
    public static Field<Object> _LtreeSame(
          Object __1
        , Object __2
        , Object __3
    ) {
        _LtreeSame f = new _LtreeSame();
        f.set__1(__1);
        f.set__2(__2);
        f.set__3(__3);

        return f.asField();
    }

    /**
     * @deprecated Unknown data type. If this is a qualified, user-defined type,
     * it may have been excluded from code generation. If this is a built-in
     * type, you can define an explicit {@link org.jooq.Binding} to specify how
     * this type should be handled. Deprecation can be turned off using
     * {@literal <deprecationOnUnknownTypes/>} in your code generator
     * configuration.
     */
    @Deprecated
    public static Field<Object> _LtreeSame(
          Field<Object> __1
        , Field<Object> __2
        , Field<Object> __3
    ) {
        _LtreeSame f = new _LtreeSame();
        f.set__1(__1);
        f.set__2(__2);
        f.set__3(__3);

        return f.asField();
    }

    /**
     * @deprecated Unknown data type. If this is a qualified, user-defined type,
     * it may have been excluded from code generation. If this is a built-in
     * type, you can define an explicit {@link org.jooq.Binding} to specify how
     * this type should be handled. Deprecation can be turned off using
     * {@literal <deprecationOnUnknownTypes/>} in your code generator
     * configuration.
     */
    @Deprecated
    public static Object _LtreeUnion(
          Configuration configuration
        , Object __1
        , Object __2
    ) {
        _LtreeUnion f = new _LtreeUnion();
        f.set__1(__1);
        f.set__2(__2);

        f.execute(configuration);
        return f.getReturnValue();
    }

    /**
     * @deprecated Unknown data type. If this is a qualified, user-defined type,
     * it may have been excluded from code generation. If this is a built-in
     * type, you can define an explicit {@link org.jooq.Binding} to specify how
     * this type should be handled. Deprecation can be turned off using
     * {@literal <deprecationOnUnknownTypes/>} in your code generator
     * configuration.
     */
    @Deprecated
    public static Field<Object> _LtreeUnion(
          Object __1
        , Object __2
    ) {
        _LtreeUnion f = new _LtreeUnion();
        f.set__1(__1);
        f.set__2(__2);

        return f.asField();
    }

    /**
     * @deprecated Unknown data type. If this is a qualified, user-defined type,
     * it may have been excluded from code generation. If this is a built-in
     * type, you can define an explicit {@link org.jooq.Binding} to specify how
     * this type should be handled. Deprecation can be turned off using
     * {@literal <deprecationOnUnknownTypes/>} in your code generator
     * configuration.
     */
    @Deprecated
    public static Field<Object> _LtreeUnion(
          Field<Object> __1
        , Field<Object> __2
    ) {
        _LtreeUnion f = new _LtreeUnion();
        f.set__1(__1);
        f.set__2(__2);

        return f.asField();
    }

    /**
     * @deprecated Unknown data type. Parameter type or return type is unknown.
     * If this is a qualified, user-defined type, it may have been excluded from
     * code generation. If this is a built-in type, you can define an explicit
     * {@link org.jooq.Binding} to specify how this type should be handled.
     * Deprecation can be turned off using {@literal
     * <deprecationOnUnknownTypes/>} in your code generator configuration.
     */
    @Deprecated
    public static Boolean _LtxtqExec(
          Configuration configuration
        , Ltree[] __1
        , Object __2
    ) {
        _LtxtqExec f = new _LtxtqExec();
        f.set__1(__1);
        f.set__2(__2);

        f.execute(configuration);
        return f.getReturnValue();
    }

    /**
     * @deprecated Unknown data type. Parameter type or return type is unknown.
     * If this is a qualified, user-defined type, it may have been excluded from
     * code generation. If this is a built-in type, you can define an explicit
     * {@link org.jooq.Binding} to specify how this type should be handled.
     * Deprecation can be turned off using {@literal
     * <deprecationOnUnknownTypes/>} in your code generator configuration.
     */
    @Deprecated
    public static Field<Boolean> _LtxtqExec(
          Ltree[] __1
        , Object __2
    ) {
        _LtxtqExec f = new _LtxtqExec();
        f.set__1(__1);
        f.set__2(__2);

        return f.asField();
    }

    /**
     * @deprecated Unknown data type. Parameter type or return type is unknown.
     * If this is a qualified, user-defined type, it may have been excluded from
     * code generation. If this is a built-in type, you can define an explicit
     * {@link org.jooq.Binding} to specify how this type should be handled.
     * Deprecation can be turned off using {@literal
     * <deprecationOnUnknownTypes/>} in your code generator configuration.
     */
    @Deprecated
    public static Field<Boolean> _LtxtqExec(
          Field<Ltree[]> __1
        , Field<Object> __2
    ) {
        _LtxtqExec f = new _LtxtqExec();
        f.set__1(__1);
        f.set__2(__2);

        return f.asField();
    }

    /**
     * @deprecated Unknown data type. Parameter type or return type is unknown.
     * If this is a qualified, user-defined type, it may have been excluded from
     * code generation. If this is a built-in type, you can define an explicit
     * {@link org.jooq.Binding} to specify how this type should be handled.
     * Deprecation can be turned off using {@literal
     * <deprecationOnUnknownTypes/>} in your code generator configuration.
     */
    @Deprecated
    public static Ltree _LtxtqExtractExec(
          Configuration configuration
        , Ltree[] __1
        , Object __2
    ) {
        _LtxtqExtractExec f = new _LtxtqExtractExec();
        f.set__1(__1);
        f.set__2(__2);

        f.execute(configuration);
        return f.getReturnValue();
    }

    /**
     * @deprecated Unknown data type. Parameter type or return type is unknown.
     * If this is a qualified, user-defined type, it may have been excluded from
     * code generation. If this is a built-in type, you can define an explicit
     * {@link org.jooq.Binding} to specify how this type should be handled.
     * Deprecation can be turned off using {@literal
     * <deprecationOnUnknownTypes/>} in your code generator configuration.
     */
    @Deprecated
    public static Field<Ltree> _LtxtqExtractExec(
          Ltree[] __1
        , Object __2
    ) {
        _LtxtqExtractExec f = new _LtxtqExtractExec();
        f.set__1(__1);
        f.set__2(__2);

        return f.asField();
    }

    /**
     * @deprecated Unknown data type. Parameter type or return type is unknown.
     * If this is a qualified, user-defined type, it may have been excluded from
     * code generation. If this is a built-in type, you can define an explicit
     * {@link org.jooq.Binding} to specify how this type should be handled.
     * Deprecation can be turned off using {@literal
     * <deprecationOnUnknownTypes/>} in your code generator configuration.
     */
    @Deprecated
    public static Field<Ltree> _LtxtqExtractExec(
          Field<Ltree[]> __1
        , Field<Object> __2
    ) {
        _LtxtqExtractExec f = new _LtxtqExtractExec();
        f.set__1(__1);
        f.set__2(__2);

        return f.asField();
    }

    /**
     * @deprecated Unknown data type. Parameter type or return type is unknown.
     * If this is a qualified, user-defined type, it may have been excluded from
     * code generation. If this is a built-in type, you can define an explicit
     * {@link org.jooq.Binding} to specify how this type should be handled.
     * Deprecation can be turned off using {@literal
     * <deprecationOnUnknownTypes/>} in your code generator configuration.
     */
    @Deprecated
    public static Boolean _LtxtqRexec(
          Configuration configuration
        , Object __1
        , Ltree[] __2
    ) {
        _LtxtqRexec f = new _LtxtqRexec();
        f.set__1(__1);
        f.set__2(__2);

        f.execute(configuration);
        return f.getReturnValue();
    }

    /**
     * @deprecated Unknown data type. Parameter type or return type is unknown.
     * If this is a qualified, user-defined type, it may have been excluded from
     * code generation. If this is a built-in type, you can define an explicit
     * {@link org.jooq.Binding} to specify how this type should be handled.
     * Deprecation can be turned off using {@literal
     * <deprecationOnUnknownTypes/>} in your code generator configuration.
     */
    @Deprecated
    public static Field<Boolean> _LtxtqRexec(
          Object __1
        , Ltree[] __2
    ) {
        _LtxtqRexec f = new _LtxtqRexec();
        f.set__1(__1);
        f.set__2(__2);

        return f.asField();
    }

    /**
     * @deprecated Unknown data type. Parameter type or return type is unknown.
     * If this is a qualified, user-defined type, it may have been excluded from
     * code generation. If this is a built-in type, you can define an explicit
     * {@link org.jooq.Binding} to specify how this type should be handled.
     * Deprecation can be turned off using {@literal
     * <deprecationOnUnknownTypes/>} in your code generator configuration.
     */
    @Deprecated
    public static Field<Boolean> _LtxtqRexec(
          Field<Object> __1
        , Field<Ltree[]> __2
    ) {
        _LtxtqRexec f = new _LtxtqRexec();
        f.set__1(__1);
        f.set__2(__2);

        return f.asField();
    }

    /**
     * Call <code>public.index</code>
     */
    public static Integer index1(
          Configuration configuration
        , Ltree __1
        , Ltree __2
    ) {
        Index1 f = new Index1();
        f.set__1(__1);
        f.set__2(__2);

        f.execute(configuration);
        return f.getReturnValue();
    }

    /**
     * Get <code>public.index</code> as a field.
     */
    public static Field<Integer> index1(
          Ltree __1
        , Ltree __2
    ) {
        Index1 f = new Index1();
        f.set__1(__1);
        f.set__2(__2);

        return f.asField();
    }

    /**
     * Get <code>public.index</code> as a field.
     */
    public static Field<Integer> index1(
          Field<Ltree> __1
        , Field<Ltree> __2
    ) {
        Index1 f = new Index1();
        f.set__1(__1);
        f.set__2(__2);

        return f.asField();
    }

    /**
     * Call <code>public.index</code>
     */
    public static Integer index2(
          Configuration configuration
        , Ltree __1
        , Ltree __2
        , Integer __3
    ) {
        Index2 f = new Index2();
        f.set__1(__1);
        f.set__2(__2);
        f.set__3(__3);

        f.execute(configuration);
        return f.getReturnValue();
    }

    /**
     * Get <code>public.index</code> as a field.
     */
    public static Field<Integer> index2(
          Ltree __1
        , Ltree __2
        , Integer __3
    ) {
        Index2 f = new Index2();
        f.set__1(__1);
        f.set__2(__2);
        f.set__3(__3);

        return f.asField();
    }

    /**
     * Get <code>public.index</code> as a field.
     */
    public static Field<Integer> index2(
          Field<Ltree> __1
        , Field<Ltree> __2
        , Field<Integer> __3
    ) {
        Index2 f = new Index2();
        f.set__1(__1);
        f.set__2(__2);
        f.set__3(__3);

        return f.asField();
    }

    /**
     * Call <code>public.lca</code>
     */
    public static Ltree lca1(
          Configuration configuration
        , Ltree[] __1
    ) {
        Lca1 f = new Lca1();
        f.set__1(__1);

        f.execute(configuration);
        return f.getReturnValue();
    }

    /**
     * Get <code>public.lca</code> as a field.
     */
    public static Field<Ltree> lca1(
          Ltree[] __1
    ) {
        Lca1 f = new Lca1();
        f.set__1(__1);

        return f.asField();
    }

    /**
     * Get <code>public.lca</code> as a field.
     */
    public static Field<Ltree> lca1(
          Field<Ltree[]> __1
    ) {
        Lca1 f = new Lca1();
        f.set__1(__1);

        return f.asField();
    }

    /**
     * Call <code>public.lca</code>
     */
    public static Ltree lca2(
          Configuration configuration
        , Ltree __1
        , Ltree __2
    ) {
        Lca2 f = new Lca2();
        f.set__1(__1);
        f.set__2(__2);

        f.execute(configuration);
        return f.getReturnValue();
    }

    /**
     * Get <code>public.lca</code> as a field.
     */
    public static Field<Ltree> lca2(
          Ltree __1
        , Ltree __2
    ) {
        Lca2 f = new Lca2();
        f.set__1(__1);
        f.set__2(__2);

        return f.asField();
    }

    /**
     * Get <code>public.lca</code> as a field.
     */
    public static Field<Ltree> lca2(
          Field<Ltree> __1
        , Field<Ltree> __2
    ) {
        Lca2 f = new Lca2();
        f.set__1(__1);
        f.set__2(__2);

        return f.asField();
    }

    /**
     * Call <code>public.lca</code>
     */
    public static Ltree lca3(
          Configuration configuration
        , Ltree __1
        , Ltree __2
        , Ltree __3
    ) {
        Lca3 f = new Lca3();
        f.set__1(__1);
        f.set__2(__2);
        f.set__3(__3);

        f.execute(configuration);
        return f.getReturnValue();
    }

    /**
     * Get <code>public.lca</code> as a field.
     */
    public static Field<Ltree> lca3(
          Ltree __1
        , Ltree __2
        , Ltree __3
    ) {
        Lca3 f = new Lca3();
        f.set__1(__1);
        f.set__2(__2);
        f.set__3(__3);

        return f.asField();
    }

    /**
     * Get <code>public.lca</code> as a field.
     */
    public static Field<Ltree> lca3(
          Field<Ltree> __1
        , Field<Ltree> __2
        , Field<Ltree> __3
    ) {
        Lca3 f = new Lca3();
        f.set__1(__1);
        f.set__2(__2);
        f.set__3(__3);

        return f.asField();
    }

    /**
     * Call <code>public.lca</code>
     */
    public static Ltree lca4(
          Configuration configuration
        , Ltree __1
        , Ltree __2
        , Ltree __3
        , Ltree __4
    ) {
        Lca4 f = new Lca4();
        f.set__1(__1);
        f.set__2(__2);
        f.set__3(__3);
        f.set__4(__4);

        f.execute(configuration);
        return f.getReturnValue();
    }

    /**
     * Get <code>public.lca</code> as a field.
     */
    public static Field<Ltree> lca4(
          Ltree __1
        , Ltree __2
        , Ltree __3
        , Ltree __4
    ) {
        Lca4 f = new Lca4();
        f.set__1(__1);
        f.set__2(__2);
        f.set__3(__3);
        f.set__4(__4);

        return f.asField();
    }

    /**
     * Get <code>public.lca</code> as a field.
     */
    public static Field<Ltree> lca4(
          Field<Ltree> __1
        , Field<Ltree> __2
        , Field<Ltree> __3
        , Field<Ltree> __4
    ) {
        Lca4 f = new Lca4();
        f.set__1(__1);
        f.set__2(__2);
        f.set__3(__3);
        f.set__4(__4);

        return f.asField();
    }

    /**
     * Call <code>public.lca</code>
     */
    public static Ltree lca5(
          Configuration configuration
        , Ltree __1
        , Ltree __2
        , Ltree __3
        , Ltree __4
        , Ltree __5
    ) {
        Lca5 f = new Lca5();
        f.set__1(__1);
        f.set__2(__2);
        f.set__3(__3);
        f.set__4(__4);
        f.set__5(__5);

        f.execute(configuration);
        return f.getReturnValue();
    }

    /**
     * Get <code>public.lca</code> as a field.
     */
    public static Field<Ltree> lca5(
          Ltree __1
        , Ltree __2
        , Ltree __3
        , Ltree __4
        , Ltree __5
    ) {
        Lca5 f = new Lca5();
        f.set__1(__1);
        f.set__2(__2);
        f.set__3(__3);
        f.set__4(__4);
        f.set__5(__5);

        return f.asField();
    }

    /**
     * Get <code>public.lca</code> as a field.
     */
    public static Field<Ltree> lca5(
          Field<Ltree> __1
        , Field<Ltree> __2
        , Field<Ltree> __3
        , Field<Ltree> __4
        , Field<Ltree> __5
    ) {
        Lca5 f = new Lca5();
        f.set__1(__1);
        f.set__2(__2);
        f.set__3(__3);
        f.set__4(__4);
        f.set__5(__5);

        return f.asField();
    }

    /**
     * Call <code>public.lca</code>
     */
    public static Ltree lca6(
          Configuration configuration
        , Ltree __1
        , Ltree __2
        , Ltree __3
        , Ltree __4
        , Ltree __5
        , Ltree __6
    ) {
        Lca6 f = new Lca6();
        f.set__1(__1);
        f.set__2(__2);
        f.set__3(__3);
        f.set__4(__4);
        f.set__5(__5);
        f.set__6(__6);

        f.execute(configuration);
        return f.getReturnValue();
    }

    /**
     * Get <code>public.lca</code> as a field.
     */
    public static Field<Ltree> lca6(
          Ltree __1
        , Ltree __2
        , Ltree __3
        , Ltree __4
        , Ltree __5
        , Ltree __6
    ) {
        Lca6 f = new Lca6();
        f.set__1(__1);
        f.set__2(__2);
        f.set__3(__3);
        f.set__4(__4);
        f.set__5(__5);
        f.set__6(__6);

        return f.asField();
    }

    /**
     * Get <code>public.lca</code> as a field.
     */
    public static Field<Ltree> lca6(
          Field<Ltree> __1
        , Field<Ltree> __2
        , Field<Ltree> __3
        , Field<Ltree> __4
        , Field<Ltree> __5
        , Field<Ltree> __6
    ) {
        Lca6 f = new Lca6();
        f.set__1(__1);
        f.set__2(__2);
        f.set__3(__3);
        f.set__4(__4);
        f.set__5(__5);
        f.set__6(__6);

        return f.asField();
    }

    /**
     * Call <code>public.lca</code>
     */
    public static Ltree lca7(
          Configuration configuration
        , Ltree __1
        , Ltree __2
        , Ltree __3
        , Ltree __4
        , Ltree __5
        , Ltree __6
        , Ltree __7
    ) {
        Lca7 f = new Lca7();
        f.set__1(__1);
        f.set__2(__2);
        f.set__3(__3);
        f.set__4(__4);
        f.set__5(__5);
        f.set__6(__6);
        f.set__7(__7);

        f.execute(configuration);
        return f.getReturnValue();
    }

    /**
     * Get <code>public.lca</code> as a field.
     */
    public static Field<Ltree> lca7(
          Ltree __1
        , Ltree __2
        , Ltree __3
        , Ltree __4
        , Ltree __5
        , Ltree __6
        , Ltree __7
    ) {
        Lca7 f = new Lca7();
        f.set__1(__1);
        f.set__2(__2);
        f.set__3(__3);
        f.set__4(__4);
        f.set__5(__5);
        f.set__6(__6);
        f.set__7(__7);

        return f.asField();
    }

    /**
     * Get <code>public.lca</code> as a field.
     */
    public static Field<Ltree> lca7(
          Field<Ltree> __1
        , Field<Ltree> __2
        , Field<Ltree> __3
        , Field<Ltree> __4
        , Field<Ltree> __5
        , Field<Ltree> __6
        , Field<Ltree> __7
    ) {
        Lca7 f = new Lca7();
        f.set__1(__1);
        f.set__2(__2);
        f.set__3(__3);
        f.set__4(__4);
        f.set__5(__5);
        f.set__6(__6);
        f.set__7(__7);

        return f.asField();
    }

    /**
     * Call <code>public.lca</code>
     */
    public static Ltree lca8(
          Configuration configuration
        , Ltree __1
        , Ltree __2
        , Ltree __3
        , Ltree __4
        , Ltree __5
        , Ltree __6
        , Ltree __7
        , Ltree __8
    ) {
        Lca8 f = new Lca8();
        f.set__1(__1);
        f.set__2(__2);
        f.set__3(__3);
        f.set__4(__4);
        f.set__5(__5);
        f.set__6(__6);
        f.set__7(__7);
        f.set__8(__8);

        f.execute(configuration);
        return f.getReturnValue();
    }

    /**
     * Get <code>public.lca</code> as a field.
     */
    public static Field<Ltree> lca8(
          Ltree __1
        , Ltree __2
        , Ltree __3
        , Ltree __4
        , Ltree __5
        , Ltree __6
        , Ltree __7
        , Ltree __8
    ) {
        Lca8 f = new Lca8();
        f.set__1(__1);
        f.set__2(__2);
        f.set__3(__3);
        f.set__4(__4);
        f.set__5(__5);
        f.set__6(__6);
        f.set__7(__7);
        f.set__8(__8);

        return f.asField();
    }

    /**
     * Get <code>public.lca</code> as a field.
     */
    public static Field<Ltree> lca8(
          Field<Ltree> __1
        , Field<Ltree> __2
        , Field<Ltree> __3
        , Field<Ltree> __4
        , Field<Ltree> __5
        , Field<Ltree> __6
        , Field<Ltree> __7
        , Field<Ltree> __8
    ) {
        Lca8 f = new Lca8();
        f.set__1(__1);
        f.set__2(__2);
        f.set__3(__3);
        f.set__4(__4);
        f.set__5(__5);
        f.set__6(__6);
        f.set__7(__7);
        f.set__8(__8);

        return f.asField();
    }

    /**
     * @deprecated Unknown data type. If this is a qualified, user-defined type,
     * it may have been excluded from code generation. If this is a built-in
     * type, you can define an explicit {@link org.jooq.Binding} to specify how
     * this type should be handled. Deprecation can be turned off using
     * {@literal <deprecationOnUnknownTypes/>} in your code generator
     * configuration.
     */
    @Deprecated
    public static Object lqueryIn(
          Configuration configuration
        , Object __1
    ) {
        LqueryIn f = new LqueryIn();
        f.set__1(__1);

        f.execute(configuration);
        return f.getReturnValue();
    }

    /**
     * @deprecated Unknown data type. If this is a qualified, user-defined type,
     * it may have been excluded from code generation. If this is a built-in
     * type, you can define an explicit {@link org.jooq.Binding} to specify how
     * this type should be handled. Deprecation can be turned off using
     * {@literal <deprecationOnUnknownTypes/>} in your code generator
     * configuration.
     */
    @Deprecated
    public static Field<Object> lqueryIn(
          Object __1
    ) {
        LqueryIn f = new LqueryIn();
        f.set__1(__1);

        return f.asField();
    }

    /**
     * @deprecated Unknown data type. If this is a qualified, user-defined type,
     * it may have been excluded from code generation. If this is a built-in
     * type, you can define an explicit {@link org.jooq.Binding} to specify how
     * this type should be handled. Deprecation can be turned off using
     * {@literal <deprecationOnUnknownTypes/>} in your code generator
     * configuration.
     */
    @Deprecated
    public static Field<Object> lqueryIn(
          Field<Object> __1
    ) {
        LqueryIn f = new LqueryIn();
        f.set__1(__1);

        return f.asField();
    }

    /**
     * @deprecated Unknown data type. If this is a qualified, user-defined type,
     * it may have been excluded from code generation. If this is a built-in
     * type, you can define an explicit {@link org.jooq.Binding} to specify how
     * this type should be handled. Deprecation can be turned off using
     * {@literal <deprecationOnUnknownTypes/>} in your code generator
     * configuration.
     */
    @Deprecated
    public static Object lqueryOut(
          Configuration configuration
        , Object __1
    ) {
        LqueryOut f = new LqueryOut();
        f.set__1(__1);

        f.execute(configuration);
        return f.getReturnValue();
    }

    /**
     * @deprecated Unknown data type. If this is a qualified, user-defined type,
     * it may have been excluded from code generation. If this is a built-in
     * type, you can define an explicit {@link org.jooq.Binding} to specify how
     * this type should be handled. Deprecation can be turned off using
     * {@literal <deprecationOnUnknownTypes/>} in your code generator
     * configuration.
     */
    @Deprecated
    public static Field<Object> lqueryOut(
          Object __1
    ) {
        LqueryOut f = new LqueryOut();
        f.set__1(__1);

        return f.asField();
    }

    /**
     * @deprecated Unknown data type. If this is a qualified, user-defined type,
     * it may have been excluded from code generation. If this is a built-in
     * type, you can define an explicit {@link org.jooq.Binding} to specify how
     * this type should be handled. Deprecation can be turned off using
     * {@literal <deprecationOnUnknownTypes/>} in your code generator
     * configuration.
     */
    @Deprecated
    public static Field<Object> lqueryOut(
          Field<Object> __1
    ) {
        LqueryOut f = new LqueryOut();
        f.set__1(__1);

        return f.asField();
    }

    /**
     * @deprecated Unknown data type. If this is a qualified, user-defined type,
     * it may have been excluded from code generation. If this is a built-in
     * type, you can define an explicit {@link org.jooq.Binding} to specify how
     * this type should be handled. Deprecation can be turned off using
     * {@literal <deprecationOnUnknownTypes/>} in your code generator
     * configuration.
     */
    @Deprecated
    public static Object lqueryRecv(
          Configuration configuration
        , Object __1
    ) {
        LqueryRecv f = new LqueryRecv();
        f.set__1(__1);

        f.execute(configuration);
        return f.getReturnValue();
    }

    /**
     * @deprecated Unknown data type. If this is a qualified, user-defined type,
     * it may have been excluded from code generation. If this is a built-in
     * type, you can define an explicit {@link org.jooq.Binding} to specify how
     * this type should be handled. Deprecation can be turned off using
     * {@literal <deprecationOnUnknownTypes/>} in your code generator
     * configuration.
     */
    @Deprecated
    public static Field<Object> lqueryRecv(
          Object __1
    ) {
        LqueryRecv f = new LqueryRecv();
        f.set__1(__1);

        return f.asField();
    }

    /**
     * @deprecated Unknown data type. If this is a qualified, user-defined type,
     * it may have been excluded from code generation. If this is a built-in
     * type, you can define an explicit {@link org.jooq.Binding} to specify how
     * this type should be handled. Deprecation can be turned off using
     * {@literal <deprecationOnUnknownTypes/>} in your code generator
     * configuration.
     */
    @Deprecated
    public static Field<Object> lqueryRecv(
          Field<Object> __1
    ) {
        LqueryRecv f = new LqueryRecv();
        f.set__1(__1);

        return f.asField();
    }

    /**
     * @deprecated Unknown data type. Parameter type or return type is unknown.
     * If this is a qualified, user-defined type, it may have been excluded from
     * code generation. If this is a built-in type, you can define an explicit
     * {@link org.jooq.Binding} to specify how this type should be handled.
     * Deprecation can be turned off using {@literal
     * <deprecationOnUnknownTypes/>} in your code generator configuration.
     */
    @Deprecated
    public static byte[] lquerySend(
          Configuration configuration
        , Object __1
    ) {
        LquerySend f = new LquerySend();
        f.set__1(__1);

        f.execute(configuration);
        return f.getReturnValue();
    }

    /**
     * @deprecated Unknown data type. Parameter type or return type is unknown.
     * If this is a qualified, user-defined type, it may have been excluded from
     * code generation. If this is a built-in type, you can define an explicit
     * {@link org.jooq.Binding} to specify how this type should be handled.
     * Deprecation can be turned off using {@literal
     * <deprecationOnUnknownTypes/>} in your code generator configuration.
     */
    @Deprecated
    public static Field<byte[]> lquerySend(
          Object __1
    ) {
        LquerySend f = new LquerySend();
        f.set__1(__1);

        return f.asField();
    }

    /**
     * @deprecated Unknown data type. Parameter type or return type is unknown.
     * If this is a qualified, user-defined type, it may have been excluded from
     * code generation. If this is a built-in type, you can define an explicit
     * {@link org.jooq.Binding} to specify how this type should be handled.
     * Deprecation can be turned off using {@literal
     * <deprecationOnUnknownTypes/>} in your code generator configuration.
     */
    @Deprecated
    public static Field<byte[]> lquerySend(
          Field<Object> __1
    ) {
        LquerySend f = new LquerySend();
        f.set__1(__1);

        return f.asField();
    }

    /**
     * Call <code>public.lt_q_regex</code>
     */
    public static Boolean ltQRegex(
          Configuration configuration
        , Ltree __1
        , Object[] __2
    ) {
        LtQRegex f = new LtQRegex();
        f.set__1(__1);
        f.set__2(__2);

        f.execute(configuration);
        return f.getReturnValue();
    }

    /**
     * Get <code>public.lt_q_regex</code> as a field.
     */
    public static Field<Boolean> ltQRegex(
          Ltree __1
        , Object[] __2
    ) {
        LtQRegex f = new LtQRegex();
        f.set__1(__1);
        f.set__2(__2);

        return f.asField();
    }

    /**
     * Get <code>public.lt_q_regex</code> as a field.
     */
    public static Field<Boolean> ltQRegex(
          Field<Ltree> __1
        , Field<Object[]> __2
    ) {
        LtQRegex f = new LtQRegex();
        f.set__1(__1);
        f.set__2(__2);

        return f.asField();
    }

    /**
     * Call <code>public.lt_q_rregex</code>
     */
    public static Boolean ltQRregex(
          Configuration configuration
        , Object[] __1
        , Ltree __2
    ) {
        LtQRregex f = new LtQRregex();
        f.set__1(__1);
        f.set__2(__2);

        f.execute(configuration);
        return f.getReturnValue();
    }

    /**
     * Get <code>public.lt_q_rregex</code> as a field.
     */
    public static Field<Boolean> ltQRregex(
          Object[] __1
        , Ltree __2
    ) {
        LtQRregex f = new LtQRregex();
        f.set__1(__1);
        f.set__2(__2);

        return f.asField();
    }

    /**
     * Get <code>public.lt_q_rregex</code> as a field.
     */
    public static Field<Boolean> ltQRregex(
          Field<Object[]> __1
        , Field<Ltree> __2
    ) {
        LtQRregex f = new LtQRregex();
        f.set__1(__1);
        f.set__2(__2);

        return f.asField();
    }

    /**
     * Call <code>public.ltree2text</code>
     */
    public static String ltree2text(
          Configuration configuration
        , Ltree __1
    ) {
        Ltree2text f = new Ltree2text();
        f.set__1(__1);

        f.execute(configuration);
        return f.getReturnValue();
    }

    /**
     * Get <code>public.ltree2text</code> as a field.
     */
    public static Field<String> ltree2text(
          Ltree __1
    ) {
        Ltree2text f = new Ltree2text();
        f.set__1(__1);

        return f.asField();
    }

    /**
     * Get <code>public.ltree2text</code> as a field.
     */
    public static Field<String> ltree2text(
          Field<Ltree> __1
    ) {
        Ltree2text f = new Ltree2text();
        f.set__1(__1);

        return f.asField();
    }

    /**
     * Call <code>public.ltree_addltree</code>
     */
    public static Ltree ltreeAddltree(
          Configuration configuration
        , Ltree __1
        , Ltree __2
    ) {
        LtreeAddltree f = new LtreeAddltree();
        f.set__1(__1);
        f.set__2(__2);

        f.execute(configuration);
        return f.getReturnValue();
    }

    /**
     * Get <code>public.ltree_addltree</code> as a field.
     */
    public static Field<Ltree> ltreeAddltree(
          Ltree __1
        , Ltree __2
    ) {
        LtreeAddltree f = new LtreeAddltree();
        f.set__1(__1);
        f.set__2(__2);

        return f.asField();
    }

    /**
     * Get <code>public.ltree_addltree</code> as a field.
     */
    public static Field<Ltree> ltreeAddltree(
          Field<Ltree> __1
        , Field<Ltree> __2
    ) {
        LtreeAddltree f = new LtreeAddltree();
        f.set__1(__1);
        f.set__2(__2);

        return f.asField();
    }

    /**
     * Call <code>public.ltree_addtext</code>
     */
    public static Ltree ltreeAddtext(
          Configuration configuration
        , Ltree __1
        , String __2
    ) {
        LtreeAddtext f = new LtreeAddtext();
        f.set__1(__1);
        f.set__2(__2);

        f.execute(configuration);
        return f.getReturnValue();
    }

    /**
     * Get <code>public.ltree_addtext</code> as a field.
     */
    public static Field<Ltree> ltreeAddtext(
          Ltree __1
        , String __2
    ) {
        LtreeAddtext f = new LtreeAddtext();
        f.set__1(__1);
        f.set__2(__2);

        return f.asField();
    }

    /**
     * Get <code>public.ltree_addtext</code> as a field.
     */
    public static Field<Ltree> ltreeAddtext(
          Field<Ltree> __1
        , Field<String> __2
    ) {
        LtreeAddtext f = new LtreeAddtext();
        f.set__1(__1);
        f.set__2(__2);

        return f.asField();
    }

    /**
     * Call <code>public.ltree_cmp</code>
     */
    public static Integer ltreeCmp(
          Configuration configuration
        , Ltree __1
        , Ltree __2
    ) {
        LtreeCmp f = new LtreeCmp();
        f.set__1(__1);
        f.set__2(__2);

        f.execute(configuration);
        return f.getReturnValue();
    }

    /**
     * Get <code>public.ltree_cmp</code> as a field.
     */
    public static Field<Integer> ltreeCmp(
          Ltree __1
        , Ltree __2
    ) {
        LtreeCmp f = new LtreeCmp();
        f.set__1(__1);
        f.set__2(__2);

        return f.asField();
    }

    /**
     * Get <code>public.ltree_cmp</code> as a field.
     */
    public static Field<Integer> ltreeCmp(
          Field<Ltree> __1
        , Field<Ltree> __2
    ) {
        LtreeCmp f = new LtreeCmp();
        f.set__1(__1);
        f.set__2(__2);

        return f.asField();
    }

    /**
     * @deprecated Unknown data type. If this is a qualified, user-defined type,
     * it may have been excluded from code generation. If this is a built-in
     * type, you can define an explicit {@link org.jooq.Binding} to specify how
     * this type should be handled. Deprecation can be turned off using
     * {@literal <deprecationOnUnknownTypes/>} in your code generator
     * configuration.
     */
    @Deprecated
    public static Object ltreeCompress(
          Configuration configuration
        , Object __1
    ) {
        LtreeCompress f = new LtreeCompress();
        f.set__1(__1);

        f.execute(configuration);
        return f.getReturnValue();
    }

    /**
     * @deprecated Unknown data type. If this is a qualified, user-defined type,
     * it may have been excluded from code generation. If this is a built-in
     * type, you can define an explicit {@link org.jooq.Binding} to specify how
     * this type should be handled. Deprecation can be turned off using
     * {@literal <deprecationOnUnknownTypes/>} in your code generator
     * configuration.
     */
    @Deprecated
    public static Field<Object> ltreeCompress(
          Object __1
    ) {
        LtreeCompress f = new LtreeCompress();
        f.set__1(__1);

        return f.asField();
    }

    /**
     * @deprecated Unknown data type. If this is a qualified, user-defined type,
     * it may have been excluded from code generation. If this is a built-in
     * type, you can define an explicit {@link org.jooq.Binding} to specify how
     * this type should be handled. Deprecation can be turned off using
     * {@literal <deprecationOnUnknownTypes/>} in your code generator
     * configuration.
     */
    @Deprecated
    public static Field<Object> ltreeCompress(
          Field<Object> __1
    ) {
        LtreeCompress f = new LtreeCompress();
        f.set__1(__1);

        return f.asField();
    }

    /**
     * @deprecated Unknown data type. Parameter type or return type is unknown.
     * If this is a qualified, user-defined type, it may have been excluded from
     * code generation. If this is a built-in type, you can define an explicit
     * {@link org.jooq.Binding} to specify how this type should be handled.
     * Deprecation can be turned off using {@literal
     * <deprecationOnUnknownTypes/>} in your code generator configuration.
     */
    @Deprecated
    public static Boolean ltreeConsistent(
          Configuration configuration
        , Object __1
        , Ltree __2
        , Short __3
        , Long __4
        , Object __5
    ) {
        LtreeConsistent f = new LtreeConsistent();
        f.set__1(__1);
        f.set__2(__2);
        f.set__3(__3);
        f.set__4(__4);
        f.set__5(__5);

        f.execute(configuration);
        return f.getReturnValue();
    }

    /**
     * @deprecated Unknown data type. Parameter type or return type is unknown.
     * If this is a qualified, user-defined type, it may have been excluded from
     * code generation. If this is a built-in type, you can define an explicit
     * {@link org.jooq.Binding} to specify how this type should be handled.
     * Deprecation can be turned off using {@literal
     * <deprecationOnUnknownTypes/>} in your code generator configuration.
     */
    @Deprecated
    public static Field<Boolean> ltreeConsistent(
          Object __1
        , Ltree __2
        , Short __3
        , Long __4
        , Object __5
    ) {
        LtreeConsistent f = new LtreeConsistent();
        f.set__1(__1);
        f.set__2(__2);
        f.set__3(__3);
        f.set__4(__4);
        f.set__5(__5);

        return f.asField();
    }

    /**
     * @deprecated Unknown data type. Parameter type or return type is unknown.
     * If this is a qualified, user-defined type, it may have been excluded from
     * code generation. If this is a built-in type, you can define an explicit
     * {@link org.jooq.Binding} to specify how this type should be handled.
     * Deprecation can be turned off using {@literal
     * <deprecationOnUnknownTypes/>} in your code generator configuration.
     */
    @Deprecated
    public static Field<Boolean> ltreeConsistent(
          Field<Object> __1
        , Field<Ltree> __2
        , Field<Short> __3
        , Field<Long> __4
        , Field<Object> __5
    ) {
        LtreeConsistent f = new LtreeConsistent();
        f.set__1(__1);
        f.set__2(__2);
        f.set__3(__3);
        f.set__4(__4);
        f.set__5(__5);

        return f.asField();
    }

    /**
     * @deprecated Unknown data type. If this is a qualified, user-defined type,
     * it may have been excluded from code generation. If this is a built-in
     * type, you can define an explicit {@link org.jooq.Binding} to specify how
     * this type should be handled. Deprecation can be turned off using
     * {@literal <deprecationOnUnknownTypes/>} in your code generator
     * configuration.
     */
    @Deprecated
    public static Object ltreeDecompress(
          Configuration configuration
        , Object __1
    ) {
        LtreeDecompress f = new LtreeDecompress();
        f.set__1(__1);

        f.execute(configuration);
        return f.getReturnValue();
    }

    /**
     * @deprecated Unknown data type. If this is a qualified, user-defined type,
     * it may have been excluded from code generation. If this is a built-in
     * type, you can define an explicit {@link org.jooq.Binding} to specify how
     * this type should be handled. Deprecation can be turned off using
     * {@literal <deprecationOnUnknownTypes/>} in your code generator
     * configuration.
     */
    @Deprecated
    public static Field<Object> ltreeDecompress(
          Object __1
    ) {
        LtreeDecompress f = new LtreeDecompress();
        f.set__1(__1);

        return f.asField();
    }

    /**
     * @deprecated Unknown data type. If this is a qualified, user-defined type,
     * it may have been excluded from code generation. If this is a built-in
     * type, you can define an explicit {@link org.jooq.Binding} to specify how
     * this type should be handled. Deprecation can be turned off using
     * {@literal <deprecationOnUnknownTypes/>} in your code generator
     * configuration.
     */
    @Deprecated
    public static Field<Object> ltreeDecompress(
          Field<Object> __1
    ) {
        LtreeDecompress f = new LtreeDecompress();
        f.set__1(__1);

        return f.asField();
    }

    /**
     * Call <code>public.ltree_eq</code>
     */
    public static Boolean ltreeEq(
          Configuration configuration
        , Ltree __1
        , Ltree __2
    ) {
        LtreeEq f = new LtreeEq();
        f.set__1(__1);
        f.set__2(__2);

        f.execute(configuration);
        return f.getReturnValue();
    }

    /**
     * Get <code>public.ltree_eq</code> as a field.
     */
    public static Field<Boolean> ltreeEq(
          Ltree __1
        , Ltree __2
    ) {
        LtreeEq f = new LtreeEq();
        f.set__1(__1);
        f.set__2(__2);

        return f.asField();
    }

    /**
     * Get <code>public.ltree_eq</code> as a field.
     */
    public static Field<Boolean> ltreeEq(
          Field<Ltree> __1
        , Field<Ltree> __2
    ) {
        LtreeEq f = new LtreeEq();
        f.set__1(__1);
        f.set__2(__2);

        return f.asField();
    }

    /**
     * Call <code>public.ltree_ge</code>
     */
    public static Boolean ltreeGe(
          Configuration configuration
        , Ltree __1
        , Ltree __2
    ) {
        LtreeGe f = new LtreeGe();
        f.set__1(__1);
        f.set__2(__2);

        f.execute(configuration);
        return f.getReturnValue();
    }

    /**
     * Get <code>public.ltree_ge</code> as a field.
     */
    public static Field<Boolean> ltreeGe(
          Ltree __1
        , Ltree __2
    ) {
        LtreeGe f = new LtreeGe();
        f.set__1(__1);
        f.set__2(__2);

        return f.asField();
    }

    /**
     * Get <code>public.ltree_ge</code> as a field.
     */
    public static Field<Boolean> ltreeGe(
          Field<Ltree> __1
        , Field<Ltree> __2
    ) {
        LtreeGe f = new LtreeGe();
        f.set__1(__1);
        f.set__2(__2);

        return f.asField();
    }

    /**
     * @deprecated Unknown data type. If this is a qualified, user-defined type,
     * it may have been excluded from code generation. If this is a built-in
     * type, you can define an explicit {@link org.jooq.Binding} to specify how
     * this type should be handled. Deprecation can be turned off using
     * {@literal <deprecationOnUnknownTypes/>} in your code generator
     * configuration.
     */
    @Deprecated
    public static Object ltreeGistIn(
          Configuration configuration
        , Object __1
    ) {
        LtreeGistIn f = new LtreeGistIn();
        f.set__1(__1);

        f.execute(configuration);
        return f.getReturnValue();
    }

    /**
     * @deprecated Unknown data type. If this is a qualified, user-defined type,
     * it may have been excluded from code generation. If this is a built-in
     * type, you can define an explicit {@link org.jooq.Binding} to specify how
     * this type should be handled. Deprecation can be turned off using
     * {@literal <deprecationOnUnknownTypes/>} in your code generator
     * configuration.
     */
    @Deprecated
    public static Field<Object> ltreeGistIn(
          Object __1
    ) {
        LtreeGistIn f = new LtreeGistIn();
        f.set__1(__1);

        return f.asField();
    }

    /**
     * @deprecated Unknown data type. If this is a qualified, user-defined type,
     * it may have been excluded from code generation. If this is a built-in
     * type, you can define an explicit {@link org.jooq.Binding} to specify how
     * this type should be handled. Deprecation can be turned off using
     * {@literal <deprecationOnUnknownTypes/>} in your code generator
     * configuration.
     */
    @Deprecated
    public static Field<Object> ltreeGistIn(
          Field<Object> __1
    ) {
        LtreeGistIn f = new LtreeGistIn();
        f.set__1(__1);

        return f.asField();
    }

    /**
     * @deprecated Unknown data type. Parameter type or return type is unknown.
     * If this is a qualified, user-defined type, it may have been excluded from
     * code generation. If this is a built-in type, you can define an explicit
     * {@link org.jooq.Binding} to specify how this type should be handled.
     * Deprecation can be turned off using {@literal
     * <deprecationOnUnknownTypes/>} in your code generator configuration.
     */
    @Deprecated
    public static void ltreeGistOptions(
          Configuration configuration
        , Object __1
    ) {
        LtreeGistOptions p = new LtreeGistOptions();
        p.set__1(__1);

        p.execute(configuration);
    }

    /**
     * @deprecated Unknown data type. If this is a qualified, user-defined type,
     * it may have been excluded from code generation. If this is a built-in
     * type, you can define an explicit {@link org.jooq.Binding} to specify how
     * this type should be handled. Deprecation can be turned off using
     * {@literal <deprecationOnUnknownTypes/>} in your code generator
     * configuration.
     */
    @Deprecated
    public static Object ltreeGistOut(
          Configuration configuration
        , Object __1
    ) {
        LtreeGistOut f = new LtreeGistOut();
        f.set__1(__1);

        f.execute(configuration);
        return f.getReturnValue();
    }

    /**
     * @deprecated Unknown data type. If this is a qualified, user-defined type,
     * it may have been excluded from code generation. If this is a built-in
     * type, you can define an explicit {@link org.jooq.Binding} to specify how
     * this type should be handled. Deprecation can be turned off using
     * {@literal <deprecationOnUnknownTypes/>} in your code generator
     * configuration.
     */
    @Deprecated
    public static Field<Object> ltreeGistOut(
          Object __1
    ) {
        LtreeGistOut f = new LtreeGistOut();
        f.set__1(__1);

        return f.asField();
    }

    /**
     * @deprecated Unknown data type. If this is a qualified, user-defined type,
     * it may have been excluded from code generation. If this is a built-in
     * type, you can define an explicit {@link org.jooq.Binding} to specify how
     * this type should be handled. Deprecation can be turned off using
     * {@literal <deprecationOnUnknownTypes/>} in your code generator
     * configuration.
     */
    @Deprecated
    public static Field<Object> ltreeGistOut(
          Field<Object> __1
    ) {
        LtreeGistOut f = new LtreeGistOut();
        f.set__1(__1);

        return f.asField();
    }

    /**
     * Call <code>public.ltree_gt</code>
     */
    public static Boolean ltreeGt(
          Configuration configuration
        , Ltree __1
        , Ltree __2
    ) {
        LtreeGt f = new LtreeGt();
        f.set__1(__1);
        f.set__2(__2);

        f.execute(configuration);
        return f.getReturnValue();
    }

    /**
     * Get <code>public.ltree_gt</code> as a field.
     */
    public static Field<Boolean> ltreeGt(
          Ltree __1
        , Ltree __2
    ) {
        LtreeGt f = new LtreeGt();
        f.set__1(__1);
        f.set__2(__2);

        return f.asField();
    }

    /**
     * Get <code>public.ltree_gt</code> as a field.
     */
    public static Field<Boolean> ltreeGt(
          Field<Ltree> __1
        , Field<Ltree> __2
    ) {
        LtreeGt f = new LtreeGt();
        f.set__1(__1);
        f.set__2(__2);

        return f.asField();
    }

    /**
     * @deprecated Unknown data type. Parameter type or return type is unknown.
     * If this is a qualified, user-defined type, it may have been excluded from
     * code generation. If this is a built-in type, you can define an explicit
     * {@link org.jooq.Binding} to specify how this type should be handled.
     * Deprecation can be turned off using {@literal
     * <deprecationOnUnknownTypes/>} in your code generator configuration.
     */
    @Deprecated
    public static Ltree ltreeIn(
          Configuration configuration
        , Object __1
    ) {
        LtreeIn f = new LtreeIn();
        f.set__1(__1);

        f.execute(configuration);
        return f.getReturnValue();
    }

    /**
     * @deprecated Unknown data type. Parameter type or return type is unknown.
     * If this is a qualified, user-defined type, it may have been excluded from
     * code generation. If this is a built-in type, you can define an explicit
     * {@link org.jooq.Binding} to specify how this type should be handled.
     * Deprecation can be turned off using {@literal
     * <deprecationOnUnknownTypes/>} in your code generator configuration.
     */
    @Deprecated
    public static Field<Ltree> ltreeIn(
          Object __1
    ) {
        LtreeIn f = new LtreeIn();
        f.set__1(__1);

        return f.asField();
    }

    /**
     * @deprecated Unknown data type. Parameter type or return type is unknown.
     * If this is a qualified, user-defined type, it may have been excluded from
     * code generation. If this is a built-in type, you can define an explicit
     * {@link org.jooq.Binding} to specify how this type should be handled.
     * Deprecation can be turned off using {@literal
     * <deprecationOnUnknownTypes/>} in your code generator configuration.
     */
    @Deprecated
    public static Field<Ltree> ltreeIn(
          Field<Object> __1
    ) {
        LtreeIn f = new LtreeIn();
        f.set__1(__1);

        return f.asField();
    }

    /**
     * Call <code>public.ltree_isparent</code>
     */
    public static Boolean ltreeIsparent(
          Configuration configuration
        , Ltree __1
        , Ltree __2
    ) {
        LtreeIsparent f = new LtreeIsparent();
        f.set__1(__1);
        f.set__2(__2);

        f.execute(configuration);
        return f.getReturnValue();
    }

    /**
     * Get <code>public.ltree_isparent</code> as a field.
     */
    public static Field<Boolean> ltreeIsparent(
          Ltree __1
        , Ltree __2
    ) {
        LtreeIsparent f = new LtreeIsparent();
        f.set__1(__1);
        f.set__2(__2);

        return f.asField();
    }

    /**
     * Get <code>public.ltree_isparent</code> as a field.
     */
    public static Field<Boolean> ltreeIsparent(
          Field<Ltree> __1
        , Field<Ltree> __2
    ) {
        LtreeIsparent f = new LtreeIsparent();
        f.set__1(__1);
        f.set__2(__2);

        return f.asField();
    }

    /**
     * Call <code>public.ltree_le</code>
     */
    public static Boolean ltreeLe(
          Configuration configuration
        , Ltree __1
        , Ltree __2
    ) {
        LtreeLe f = new LtreeLe();
        f.set__1(__1);
        f.set__2(__2);

        f.execute(configuration);
        return f.getReturnValue();
    }

    /**
     * Get <code>public.ltree_le</code> as a field.
     */
    public static Field<Boolean> ltreeLe(
          Ltree __1
        , Ltree __2
    ) {
        LtreeLe f = new LtreeLe();
        f.set__1(__1);
        f.set__2(__2);

        return f.asField();
    }

    /**
     * Get <code>public.ltree_le</code> as a field.
     */
    public static Field<Boolean> ltreeLe(
          Field<Ltree> __1
        , Field<Ltree> __2
    ) {
        LtreeLe f = new LtreeLe();
        f.set__1(__1);
        f.set__2(__2);

        return f.asField();
    }

    /**
     * Call <code>public.ltree_lt</code>
     */
    public static Boolean ltreeLt(
          Configuration configuration
        , Ltree __1
        , Ltree __2
    ) {
        LtreeLt f = new LtreeLt();
        f.set__1(__1);
        f.set__2(__2);

        f.execute(configuration);
        return f.getReturnValue();
    }

    /**
     * Get <code>public.ltree_lt</code> as a field.
     */
    public static Field<Boolean> ltreeLt(
          Ltree __1
        , Ltree __2
    ) {
        LtreeLt f = new LtreeLt();
        f.set__1(__1);
        f.set__2(__2);

        return f.asField();
    }

    /**
     * Get <code>public.ltree_lt</code> as a field.
     */
    public static Field<Boolean> ltreeLt(
          Field<Ltree> __1
        , Field<Ltree> __2
    ) {
        LtreeLt f = new LtreeLt();
        f.set__1(__1);
        f.set__2(__2);

        return f.asField();
    }

    /**
     * Call <code>public.ltree_ne</code>
     */
    public static Boolean ltreeNe(
          Configuration configuration
        , Ltree __1
        , Ltree __2
    ) {
        LtreeNe f = new LtreeNe();
        f.set__1(__1);
        f.set__2(__2);

        f.execute(configuration);
        return f.getReturnValue();
    }

    /**
     * Get <code>public.ltree_ne</code> as a field.
     */
    public static Field<Boolean> ltreeNe(
          Ltree __1
        , Ltree __2
    ) {
        LtreeNe f = new LtreeNe();
        f.set__1(__1);
        f.set__2(__2);

        return f.asField();
    }

    /**
     * Get <code>public.ltree_ne</code> as a field.
     */
    public static Field<Boolean> ltreeNe(
          Field<Ltree> __1
        , Field<Ltree> __2
    ) {
        LtreeNe f = new LtreeNe();
        f.set__1(__1);
        f.set__2(__2);

        return f.asField();
    }

    /**
     * @deprecated Unknown data type. If this is a qualified, user-defined type,
     * it may have been excluded from code generation. If this is a built-in
     * type, you can define an explicit {@link org.jooq.Binding} to specify how
     * this type should be handled. Deprecation can be turned off using
     * {@literal <deprecationOnUnknownTypes/>} in your code generator
     * configuration.
     */
    @Deprecated
    public static Object ltreeOut(
          Configuration configuration
        , Ltree __1
    ) {
        LtreeOut f = new LtreeOut();
        f.set__1(__1);

        f.execute(configuration);
        return f.getReturnValue();
    }

    /**
     * @deprecated Unknown data type. If this is a qualified, user-defined type,
     * it may have been excluded from code generation. If this is a built-in
     * type, you can define an explicit {@link org.jooq.Binding} to specify how
     * this type should be handled. Deprecation can be turned off using
     * {@literal <deprecationOnUnknownTypes/>} in your code generator
     * configuration.
     */
    @Deprecated
    public static Field<Object> ltreeOut(
          Ltree __1
    ) {
        LtreeOut f = new LtreeOut();
        f.set__1(__1);

        return f.asField();
    }

    /**
     * @deprecated Unknown data type. If this is a qualified, user-defined type,
     * it may have been excluded from code generation. If this is a built-in
     * type, you can define an explicit {@link org.jooq.Binding} to specify how
     * this type should be handled. Deprecation can be turned off using
     * {@literal <deprecationOnUnknownTypes/>} in your code generator
     * configuration.
     */
    @Deprecated
    public static Field<Object> ltreeOut(
          Field<Ltree> __1
    ) {
        LtreeOut f = new LtreeOut();
        f.set__1(__1);

        return f.asField();
    }

    /**
     * @deprecated Unknown data type. If this is a qualified, user-defined type,
     * it may have been excluded from code generation. If this is a built-in
     * type, you can define an explicit {@link org.jooq.Binding} to specify how
     * this type should be handled. Deprecation can be turned off using
     * {@literal <deprecationOnUnknownTypes/>} in your code generator
     * configuration.
     */
    @Deprecated
    public static Object ltreePenalty(
          Configuration configuration
        , Object __1
        , Object __2
        , Object __3
    ) {
        LtreePenalty f = new LtreePenalty();
        f.set__1(__1);
        f.set__2(__2);
        f.set__3(__3);

        f.execute(configuration);
        return f.getReturnValue();
    }

    /**
     * @deprecated Unknown data type. If this is a qualified, user-defined type,
     * it may have been excluded from code generation. If this is a built-in
     * type, you can define an explicit {@link org.jooq.Binding} to specify how
     * this type should be handled. Deprecation can be turned off using
     * {@literal <deprecationOnUnknownTypes/>} in your code generator
     * configuration.
     */
    @Deprecated
    public static Field<Object> ltreePenalty(
          Object __1
        , Object __2
        , Object __3
    ) {
        LtreePenalty f = new LtreePenalty();
        f.set__1(__1);
        f.set__2(__2);
        f.set__3(__3);

        return f.asField();
    }

    /**
     * @deprecated Unknown data type. If this is a qualified, user-defined type,
     * it may have been excluded from code generation. If this is a built-in
     * type, you can define an explicit {@link org.jooq.Binding} to specify how
     * this type should be handled. Deprecation can be turned off using
     * {@literal <deprecationOnUnknownTypes/>} in your code generator
     * configuration.
     */
    @Deprecated
    public static Field<Object> ltreePenalty(
          Field<Object> __1
        , Field<Object> __2
        , Field<Object> __3
    ) {
        LtreePenalty f = new LtreePenalty();
        f.set__1(__1);
        f.set__2(__2);
        f.set__3(__3);

        return f.asField();
    }

    /**
     * @deprecated Unknown data type. If this is a qualified, user-defined type,
     * it may have been excluded from code generation. If this is a built-in
     * type, you can define an explicit {@link org.jooq.Binding} to specify how
     * this type should be handled. Deprecation can be turned off using
     * {@literal <deprecationOnUnknownTypes/>} in your code generator
     * configuration.
     */
    @Deprecated
    public static Object ltreePicksplit(
          Configuration configuration
        , Object __1
        , Object __2
    ) {
        LtreePicksplit f = new LtreePicksplit();
        f.set__1(__1);
        f.set__2(__2);

        f.execute(configuration);
        return f.getReturnValue();
    }

    /**
     * @deprecated Unknown data type. If this is a qualified, user-defined type,
     * it may have been excluded from code generation. If this is a built-in
     * type, you can define an explicit {@link org.jooq.Binding} to specify how
     * this type should be handled. Deprecation can be turned off using
     * {@literal <deprecationOnUnknownTypes/>} in your code generator
     * configuration.
     */
    @Deprecated
    public static Field<Object> ltreePicksplit(
          Object __1
        , Object __2
    ) {
        LtreePicksplit f = new LtreePicksplit();
        f.set__1(__1);
        f.set__2(__2);

        return f.asField();
    }

    /**
     * @deprecated Unknown data type. If this is a qualified, user-defined type,
     * it may have been excluded from code generation. If this is a built-in
     * type, you can define an explicit {@link org.jooq.Binding} to specify how
     * this type should be handled. Deprecation can be turned off using
     * {@literal <deprecationOnUnknownTypes/>} in your code generator
     * configuration.
     */
    @Deprecated
    public static Field<Object> ltreePicksplit(
          Field<Object> __1
        , Field<Object> __2
    ) {
        LtreePicksplit f = new LtreePicksplit();
        f.set__1(__1);
        f.set__2(__2);

        return f.asField();
    }

    /**
     * @deprecated Unknown data type. Parameter type or return type is unknown.
     * If this is a qualified, user-defined type, it may have been excluded from
     * code generation. If this is a built-in type, you can define an explicit
     * {@link org.jooq.Binding} to specify how this type should be handled.
     * Deprecation can be turned off using {@literal
     * <deprecationOnUnknownTypes/>} in your code generator configuration.
     */
    @Deprecated
    public static Ltree ltreeRecv(
          Configuration configuration
        , Object __1
    ) {
        LtreeRecv f = new LtreeRecv();
        f.set__1(__1);

        f.execute(configuration);
        return f.getReturnValue();
    }

    /**
     * @deprecated Unknown data type. Parameter type or return type is unknown.
     * If this is a qualified, user-defined type, it may have been excluded from
     * code generation. If this is a built-in type, you can define an explicit
     * {@link org.jooq.Binding} to specify how this type should be handled.
     * Deprecation can be turned off using {@literal
     * <deprecationOnUnknownTypes/>} in your code generator configuration.
     */
    @Deprecated
    public static Field<Ltree> ltreeRecv(
          Object __1
    ) {
        LtreeRecv f = new LtreeRecv();
        f.set__1(__1);

        return f.asField();
    }

    /**
     * @deprecated Unknown data type. Parameter type or return type is unknown.
     * If this is a qualified, user-defined type, it may have been excluded from
     * code generation. If this is a built-in type, you can define an explicit
     * {@link org.jooq.Binding} to specify how this type should be handled.
     * Deprecation can be turned off using {@literal
     * <deprecationOnUnknownTypes/>} in your code generator configuration.
     */
    @Deprecated
    public static Field<Ltree> ltreeRecv(
          Field<Object> __1
    ) {
        LtreeRecv f = new LtreeRecv();
        f.set__1(__1);

        return f.asField();
    }

    /**
     * Call <code>public.ltree_risparent</code>
     */
    public static Boolean ltreeRisparent(
          Configuration configuration
        , Ltree __1
        , Ltree __2
    ) {
        LtreeRisparent f = new LtreeRisparent();
        f.set__1(__1);
        f.set__2(__2);

        f.execute(configuration);
        return f.getReturnValue();
    }

    /**
     * Get <code>public.ltree_risparent</code> as a field.
     */
    public static Field<Boolean> ltreeRisparent(
          Ltree __1
        , Ltree __2
    ) {
        LtreeRisparent f = new LtreeRisparent();
        f.set__1(__1);
        f.set__2(__2);

        return f.asField();
    }

    /**
     * Get <code>public.ltree_risparent</code> as a field.
     */
    public static Field<Boolean> ltreeRisparent(
          Field<Ltree> __1
        , Field<Ltree> __2
    ) {
        LtreeRisparent f = new LtreeRisparent();
        f.set__1(__1);
        f.set__2(__2);

        return f.asField();
    }

    /**
     * @deprecated Unknown data type. If this is a qualified, user-defined type,
     * it may have been excluded from code generation. If this is a built-in
     * type, you can define an explicit {@link org.jooq.Binding} to specify how
     * this type should be handled. Deprecation can be turned off using
     * {@literal <deprecationOnUnknownTypes/>} in your code generator
     * configuration.
     */
    @Deprecated
    public static Object ltreeSame(
          Configuration configuration
        , Object __1
        , Object __2
        , Object __3
    ) {
        LtreeSame f = new LtreeSame();
        f.set__1(__1);
        f.set__2(__2);
        f.set__3(__3);

        f.execute(configuration);
        return f.getReturnValue();
    }

    /**
     * @deprecated Unknown data type. If this is a qualified, user-defined type,
     * it may have been excluded from code generation. If this is a built-in
     * type, you can define an explicit {@link org.jooq.Binding} to specify how
     * this type should be handled. Deprecation can be turned off using
     * {@literal <deprecationOnUnknownTypes/>} in your code generator
     * configuration.
     */
    @Deprecated
    public static Field<Object> ltreeSame(
          Object __1
        , Object __2
        , Object __3
    ) {
        LtreeSame f = new LtreeSame();
        f.set__1(__1);
        f.set__2(__2);
        f.set__3(__3);

        return f.asField();
    }

    /**
     * @deprecated Unknown data type. If this is a qualified, user-defined type,
     * it may have been excluded from code generation. If this is a built-in
     * type, you can define an explicit {@link org.jooq.Binding} to specify how
     * this type should be handled. Deprecation can be turned off using
     * {@literal <deprecationOnUnknownTypes/>} in your code generator
     * configuration.
     */
    @Deprecated
    public static Field<Object> ltreeSame(
          Field<Object> __1
        , Field<Object> __2
        , Field<Object> __3
    ) {
        LtreeSame f = new LtreeSame();
        f.set__1(__1);
        f.set__2(__2);
        f.set__3(__3);

        return f.asField();
    }

    /**
     * Call <code>public.ltree_send</code>
     */
    public static byte[] ltreeSend(
          Configuration configuration
        , Ltree __1
    ) {
        LtreeSend f = new LtreeSend();
        f.set__1(__1);

        f.execute(configuration);
        return f.getReturnValue();
    }

    /**
     * Get <code>public.ltree_send</code> as a field.
     */
    public static Field<byte[]> ltreeSend(
          Ltree __1
    ) {
        LtreeSend f = new LtreeSend();
        f.set__1(__1);

        return f.asField();
    }

    /**
     * Get <code>public.ltree_send</code> as a field.
     */
    public static Field<byte[]> ltreeSend(
          Field<Ltree> __1
    ) {
        LtreeSend f = new LtreeSend();
        f.set__1(__1);

        return f.asField();
    }

    /**
     * Call <code>public.ltree_textadd</code>
     */
    public static Ltree ltreeTextadd(
          Configuration configuration
        , String __1
        , Ltree __2
    ) {
        LtreeTextadd f = new LtreeTextadd();
        f.set__1(__1);
        f.set__2(__2);

        f.execute(configuration);
        return f.getReturnValue();
    }

    /**
     * Get <code>public.ltree_textadd</code> as a field.
     */
    public static Field<Ltree> ltreeTextadd(
          String __1
        , Ltree __2
    ) {
        LtreeTextadd f = new LtreeTextadd();
        f.set__1(__1);
        f.set__2(__2);

        return f.asField();
    }

    /**
     * Get <code>public.ltree_textadd</code> as a field.
     */
    public static Field<Ltree> ltreeTextadd(
          Field<String> __1
        , Field<Ltree> __2
    ) {
        LtreeTextadd f = new LtreeTextadd();
        f.set__1(__1);
        f.set__2(__2);

        return f.asField();
    }

    /**
     * @deprecated Unknown data type. If this is a qualified, user-defined type,
     * it may have been excluded from code generation. If this is a built-in
     * type, you can define an explicit {@link org.jooq.Binding} to specify how
     * this type should be handled. Deprecation can be turned off using
     * {@literal <deprecationOnUnknownTypes/>} in your code generator
     * configuration.
     */
    @Deprecated
    public static Object ltreeUnion(
          Configuration configuration
        , Object __1
        , Object __2
    ) {
        LtreeUnion f = new LtreeUnion();
        f.set__1(__1);
        f.set__2(__2);

        f.execute(configuration);
        return f.getReturnValue();
    }

    /**
     * @deprecated Unknown data type. If this is a qualified, user-defined type,
     * it may have been excluded from code generation. If this is a built-in
     * type, you can define an explicit {@link org.jooq.Binding} to specify how
     * this type should be handled. Deprecation can be turned off using
     * {@literal <deprecationOnUnknownTypes/>} in your code generator
     * configuration.
     */
    @Deprecated
    public static Field<Object> ltreeUnion(
          Object __1
        , Object __2
    ) {
        LtreeUnion f = new LtreeUnion();
        f.set__1(__1);
        f.set__2(__2);

        return f.asField();
    }

    /**
     * @deprecated Unknown data type. If this is a qualified, user-defined type,
     * it may have been excluded from code generation. If this is a built-in
     * type, you can define an explicit {@link org.jooq.Binding} to specify how
     * this type should be handled. Deprecation can be turned off using
     * {@literal <deprecationOnUnknownTypes/>} in your code generator
     * configuration.
     */
    @Deprecated
    public static Field<Object> ltreeUnion(
          Field<Object> __1
        , Field<Object> __2
    ) {
        LtreeUnion f = new LtreeUnion();
        f.set__1(__1);
        f.set__2(__2);

        return f.asField();
    }

    /**
     * @deprecated Unknown data type. Parameter type or return type is unknown.
     * If this is a qualified, user-defined type, it may have been excluded from
     * code generation. If this is a built-in type, you can define an explicit
     * {@link org.jooq.Binding} to specify how this type should be handled.
     * Deprecation can be turned off using {@literal
     * <deprecationOnUnknownTypes/>} in your code generator configuration.
     */
    @Deprecated
    public static Double ltreeparentsel(
          Configuration configuration
        , Object __1
        , Long __2
        , Object __3
        , Integer __4
    ) {
        Ltreeparentsel f = new Ltreeparentsel();
        f.set__1(__1);
        f.set__2(__2);
        f.set__3(__3);
        f.set__4(__4);

        f.execute(configuration);
        return f.getReturnValue();
    }

    /**
     * @deprecated Unknown data type. Parameter type or return type is unknown.
     * If this is a qualified, user-defined type, it may have been excluded from
     * code generation. If this is a built-in type, you can define an explicit
     * {@link org.jooq.Binding} to specify how this type should be handled.
     * Deprecation can be turned off using {@literal
     * <deprecationOnUnknownTypes/>} in your code generator configuration.
     */
    @Deprecated
    public static Field<Double> ltreeparentsel(
          Object __1
        , Long __2
        , Object __3
        , Integer __4
    ) {
        Ltreeparentsel f = new Ltreeparentsel();
        f.set__1(__1);
        f.set__2(__2);
        f.set__3(__3);
        f.set__4(__4);

        return f.asField();
    }

    /**
     * @deprecated Unknown data type. Parameter type or return type is unknown.
     * If this is a qualified, user-defined type, it may have been excluded from
     * code generation. If this is a built-in type, you can define an explicit
     * {@link org.jooq.Binding} to specify how this type should be handled.
     * Deprecation can be turned off using {@literal
     * <deprecationOnUnknownTypes/>} in your code generator configuration.
     */
    @Deprecated
    public static Field<Double> ltreeparentsel(
          Field<Object> __1
        , Field<Long> __2
        , Field<Object> __3
        , Field<Integer> __4
    ) {
        Ltreeparentsel f = new Ltreeparentsel();
        f.set__1(__1);
        f.set__2(__2);
        f.set__3(__3);
        f.set__4(__4);

        return f.asField();
    }

    /**
     * @deprecated Unknown data type. Parameter type or return type is unknown.
     * If this is a qualified, user-defined type, it may have been excluded from
     * code generation. If this is a built-in type, you can define an explicit
     * {@link org.jooq.Binding} to specify how this type should be handled.
     * Deprecation can be turned off using {@literal
     * <deprecationOnUnknownTypes/>} in your code generator configuration.
     */
    @Deprecated
    public static Boolean ltxtqExec(
          Configuration configuration
        , Ltree __1
        , Object __2
    ) {
        LtxtqExec f = new LtxtqExec();
        f.set__1(__1);
        f.set__2(__2);

        f.execute(configuration);
        return f.getReturnValue();
    }

    /**
     * @deprecated Unknown data type. Parameter type or return type is unknown.
     * If this is a qualified, user-defined type, it may have been excluded from
     * code generation. If this is a built-in type, you can define an explicit
     * {@link org.jooq.Binding} to specify how this type should be handled.
     * Deprecation can be turned off using {@literal
     * <deprecationOnUnknownTypes/>} in your code generator configuration.
     */
    @Deprecated
    public static Field<Boolean> ltxtqExec(
          Ltree __1
        , Object __2
    ) {
        LtxtqExec f = new LtxtqExec();
        f.set__1(__1);
        f.set__2(__2);

        return f.asField();
    }

    /**
     * @deprecated Unknown data type. Parameter type or return type is unknown.
     * If this is a qualified, user-defined type, it may have been excluded from
     * code generation. If this is a built-in type, you can define an explicit
     * {@link org.jooq.Binding} to specify how this type should be handled.
     * Deprecation can be turned off using {@literal
     * <deprecationOnUnknownTypes/>} in your code generator configuration.
     */
    @Deprecated
    public static Field<Boolean> ltxtqExec(
          Field<Ltree> __1
        , Field<Object> __2
    ) {
        LtxtqExec f = new LtxtqExec();
        f.set__1(__1);
        f.set__2(__2);

        return f.asField();
    }

    /**
     * @deprecated Unknown data type. If this is a qualified, user-defined type,
     * it may have been excluded from code generation. If this is a built-in
     * type, you can define an explicit {@link org.jooq.Binding} to specify how
     * this type should be handled. Deprecation can be turned off using
     * {@literal <deprecationOnUnknownTypes/>} in your code generator
     * configuration.
     */
    @Deprecated
    public static Object ltxtqIn(
          Configuration configuration
        , Object __1
    ) {
        LtxtqIn f = new LtxtqIn();
        f.set__1(__1);

        f.execute(configuration);
        return f.getReturnValue();
    }

    /**
     * @deprecated Unknown data type. If this is a qualified, user-defined type,
     * it may have been excluded from code generation. If this is a built-in
     * type, you can define an explicit {@link org.jooq.Binding} to specify how
     * this type should be handled. Deprecation can be turned off using
     * {@literal <deprecationOnUnknownTypes/>} in your code generator
     * configuration.
     */
    @Deprecated
    public static Field<Object> ltxtqIn(
          Object __1
    ) {
        LtxtqIn f = new LtxtqIn();
        f.set__1(__1);

        return f.asField();
    }

    /**
     * @deprecated Unknown data type. If this is a qualified, user-defined type,
     * it may have been excluded from code generation. If this is a built-in
     * type, you can define an explicit {@link org.jooq.Binding} to specify how
     * this type should be handled. Deprecation can be turned off using
     * {@literal <deprecationOnUnknownTypes/>} in your code generator
     * configuration.
     */
    @Deprecated
    public static Field<Object> ltxtqIn(
          Field<Object> __1
    ) {
        LtxtqIn f = new LtxtqIn();
        f.set__1(__1);

        return f.asField();
    }

    /**
     * @deprecated Unknown data type. If this is a qualified, user-defined type,
     * it may have been excluded from code generation. If this is a built-in
     * type, you can define an explicit {@link org.jooq.Binding} to specify how
     * this type should be handled. Deprecation can be turned off using
     * {@literal <deprecationOnUnknownTypes/>} in your code generator
     * configuration.
     */
    @Deprecated
    public static Object ltxtqOut(
          Configuration configuration
        , Object __1
    ) {
        LtxtqOut f = new LtxtqOut();
        f.set__1(__1);

        f.execute(configuration);
        return f.getReturnValue();
    }

    /**
     * @deprecated Unknown data type. If this is a qualified, user-defined type,
     * it may have been excluded from code generation. If this is a built-in
     * type, you can define an explicit {@link org.jooq.Binding} to specify how
     * this type should be handled. Deprecation can be turned off using
     * {@literal <deprecationOnUnknownTypes/>} in your code generator
     * configuration.
     */
    @Deprecated
    public static Field<Object> ltxtqOut(
          Object __1
    ) {
        LtxtqOut f = new LtxtqOut();
        f.set__1(__1);

        return f.asField();
    }

    /**
     * @deprecated Unknown data type. If this is a qualified, user-defined type,
     * it may have been excluded from code generation. If this is a built-in
     * type, you can define an explicit {@link org.jooq.Binding} to specify how
     * this type should be handled. Deprecation can be turned off using
     * {@literal <deprecationOnUnknownTypes/>} in your code generator
     * configuration.
     */
    @Deprecated
    public static Field<Object> ltxtqOut(
          Field<Object> __1
    ) {
        LtxtqOut f = new LtxtqOut();
        f.set__1(__1);

        return f.asField();
    }

    /**
     * @deprecated Unknown data type. If this is a qualified, user-defined type,
     * it may have been excluded from code generation. If this is a built-in
     * type, you can define an explicit {@link org.jooq.Binding} to specify how
     * this type should be handled. Deprecation can be turned off using
     * {@literal <deprecationOnUnknownTypes/>} in your code generator
     * configuration.
     */
    @Deprecated
    public static Object ltxtqRecv(
          Configuration configuration
        , Object __1
    ) {
        LtxtqRecv f = new LtxtqRecv();
        f.set__1(__1);

        f.execute(configuration);
        return f.getReturnValue();
    }

    /**
     * @deprecated Unknown data type. If this is a qualified, user-defined type,
     * it may have been excluded from code generation. If this is a built-in
     * type, you can define an explicit {@link org.jooq.Binding} to specify how
     * this type should be handled. Deprecation can be turned off using
     * {@literal <deprecationOnUnknownTypes/>} in your code generator
     * configuration.
     */
    @Deprecated
    public static Field<Object> ltxtqRecv(
          Object __1
    ) {
        LtxtqRecv f = new LtxtqRecv();
        f.set__1(__1);

        return f.asField();
    }

    /**
     * @deprecated Unknown data type. If this is a qualified, user-defined type,
     * it may have been excluded from code generation. If this is a built-in
     * type, you can define an explicit {@link org.jooq.Binding} to specify how
     * this type should be handled. Deprecation can be turned off using
     * {@literal <deprecationOnUnknownTypes/>} in your code generator
     * configuration.
     */
    @Deprecated
    public static Field<Object> ltxtqRecv(
          Field<Object> __1
    ) {
        LtxtqRecv f = new LtxtqRecv();
        f.set__1(__1);

        return f.asField();
    }

    /**
     * @deprecated Unknown data type. Parameter type or return type is unknown.
     * If this is a qualified, user-defined type, it may have been excluded from
     * code generation. If this is a built-in type, you can define an explicit
     * {@link org.jooq.Binding} to specify how this type should be handled.
     * Deprecation can be turned off using {@literal
     * <deprecationOnUnknownTypes/>} in your code generator configuration.
     */
    @Deprecated
    public static Boolean ltxtqRexec(
          Configuration configuration
        , Object __1
        , Ltree __2
    ) {
        LtxtqRexec f = new LtxtqRexec();
        f.set__1(__1);
        f.set__2(__2);

        f.execute(configuration);
        return f.getReturnValue();
    }

    /**
     * @deprecated Unknown data type. Parameter type or return type is unknown.
     * If this is a qualified, user-defined type, it may have been excluded from
     * code generation. If this is a built-in type, you can define an explicit
     * {@link org.jooq.Binding} to specify how this type should be handled.
     * Deprecation can be turned off using {@literal
     * <deprecationOnUnknownTypes/>} in your code generator configuration.
     */
    @Deprecated
    public static Field<Boolean> ltxtqRexec(
          Object __1
        , Ltree __2
    ) {
        LtxtqRexec f = new LtxtqRexec();
        f.set__1(__1);
        f.set__2(__2);

        return f.asField();
    }

    /**
     * @deprecated Unknown data type. Parameter type or return type is unknown.
     * If this is a qualified, user-defined type, it may have been excluded from
     * code generation. If this is a built-in type, you can define an explicit
     * {@link org.jooq.Binding} to specify how this type should be handled.
     * Deprecation can be turned off using {@literal
     * <deprecationOnUnknownTypes/>} in your code generator configuration.
     */
    @Deprecated
    public static Field<Boolean> ltxtqRexec(
          Field<Object> __1
        , Field<Ltree> __2
    ) {
        LtxtqRexec f = new LtxtqRexec();
        f.set__1(__1);
        f.set__2(__2);

        return f.asField();
    }

    /**
     * @deprecated Unknown data type. Parameter type or return type is unknown.
     * If this is a qualified, user-defined type, it may have been excluded from
     * code generation. If this is a built-in type, you can define an explicit
     * {@link org.jooq.Binding} to specify how this type should be handled.
     * Deprecation can be turned off using {@literal
     * <deprecationOnUnknownTypes/>} in your code generator configuration.
     */
    @Deprecated
    public static byte[] ltxtqSend(
          Configuration configuration
        , Object __1
    ) {
        LtxtqSend f = new LtxtqSend();
        f.set__1(__1);

        f.execute(configuration);
        return f.getReturnValue();
    }

    /**
     * @deprecated Unknown data type. Parameter type or return type is unknown.
     * If this is a qualified, user-defined type, it may have been excluded from
     * code generation. If this is a built-in type, you can define an explicit
     * {@link org.jooq.Binding} to specify how this type should be handled.
     * Deprecation can be turned off using {@literal
     * <deprecationOnUnknownTypes/>} in your code generator configuration.
     */
    @Deprecated
    public static Field<byte[]> ltxtqSend(
          Object __1
    ) {
        LtxtqSend f = new LtxtqSend();
        f.set__1(__1);

        return f.asField();
    }

    /**
     * @deprecated Unknown data type. Parameter type or return type is unknown.
     * If this is a qualified, user-defined type, it may have been excluded from
     * code generation. If this is a built-in type, you can define an explicit
     * {@link org.jooq.Binding} to specify how this type should be handled.
     * Deprecation can be turned off using {@literal
     * <deprecationOnUnknownTypes/>} in your code generator configuration.
     */
    @Deprecated
    public static Field<byte[]> ltxtqSend(
          Field<Object> __1
    ) {
        LtxtqSend f = new LtxtqSend();
        f.set__1(__1);

        return f.asField();
    }

    /**
     * Call <code>public.nlevel</code>
     */
    public static Integer nlevel(
          Configuration configuration
        , Ltree __1
    ) {
        Nlevel f = new Nlevel();
        f.set__1(__1);

        f.execute(configuration);
        return f.getReturnValue();
    }

    /**
     * Get <code>public.nlevel</code> as a field.
     */
    public static Field<Integer> nlevel(
          Ltree __1
    ) {
        Nlevel f = new Nlevel();
        f.set__1(__1);

        return f.asField();
    }

    /**
     * Get <code>public.nlevel</code> as a field.
     */
    public static Field<Integer> nlevel(
          Field<Ltree> __1
    ) {
        Nlevel f = new Nlevel();
        f.set__1(__1);

        return f.asField();
    }

    /**
     * Call <code>public.subltree</code>
     */
    public static Ltree subltree(
          Configuration configuration
        , Ltree __1
        , Integer __2
        , Integer __3
    ) {
        Subltree f = new Subltree();
        f.set__1(__1);
        f.set__2(__2);
        f.set__3(__3);

        f.execute(configuration);
        return f.getReturnValue();
    }

    /**
     * Get <code>public.subltree</code> as a field.
     */
    public static Field<Ltree> subltree(
          Ltree __1
        , Integer __2
        , Integer __3
    ) {
        Subltree f = new Subltree();
        f.set__1(__1);
        f.set__2(__2);
        f.set__3(__3);

        return f.asField();
    }

    /**
     * Get <code>public.subltree</code> as a field.
     */
    public static Field<Ltree> subltree(
          Field<Ltree> __1
        , Field<Integer> __2
        , Field<Integer> __3
    ) {
        Subltree f = new Subltree();
        f.set__1(__1);
        f.set__2(__2);
        f.set__3(__3);

        return f.asField();
    }

    /**
     * Call <code>public.subpath</code>
     */
    public static Ltree subpath1(
          Configuration configuration
        , Ltree __1
        , Integer __2
        , Integer __3
    ) {
        Subpath1 f = new Subpath1();
        f.set__1(__1);
        f.set__2(__2);
        f.set__3(__3);

        f.execute(configuration);
        return f.getReturnValue();
    }

    /**
     * Get <code>public.subpath</code> as a field.
     */
    public static Field<Ltree> subpath1(
          Ltree __1
        , Integer __2
        , Integer __3
    ) {
        Subpath1 f = new Subpath1();
        f.set__1(__1);
        f.set__2(__2);
        f.set__3(__3);

        return f.asField();
    }

    /**
     * Get <code>public.subpath</code> as a field.
     */
    public static Field<Ltree> subpath1(
          Field<Ltree> __1
        , Field<Integer> __2
        , Field<Integer> __3
    ) {
        Subpath1 f = new Subpath1();
        f.set__1(__1);
        f.set__2(__2);
        f.set__3(__3);

        return f.asField();
    }

    /**
     * Call <code>public.subpath</code>
     */
    public static Ltree subpath2(
          Configuration configuration
        , Ltree __1
        , Integer __2
    ) {
        Subpath2 f = new Subpath2();
        f.set__1(__1);
        f.set__2(__2);

        f.execute(configuration);
        return f.getReturnValue();
    }

    /**
     * Get <code>public.subpath</code> as a field.
     */
    public static Field<Ltree> subpath2(
          Ltree __1
        , Integer __2
    ) {
        Subpath2 f = new Subpath2();
        f.set__1(__1);
        f.set__2(__2);

        return f.asField();
    }

    /**
     * Get <code>public.subpath</code> as a field.
     */
    public static Field<Ltree> subpath2(
          Field<Ltree> __1
        , Field<Integer> __2
    ) {
        Subpath2 f = new Subpath2();
        f.set__1(__1);
        f.set__2(__2);

        return f.asField();
    }

    /**
     * Call <code>public.text2ltree</code>
     */
    public static Ltree text2ltree(
          Configuration configuration
        , String __1
    ) {
        Text2ltree f = new Text2ltree();
        f.set__1(__1);

        f.execute(configuration);
        return f.getReturnValue();
    }

    /**
     * Get <code>public.text2ltree</code> as a field.
     */
    public static Field<Ltree> text2ltree(
          String __1
    ) {
        Text2ltree f = new Text2ltree();
        f.set__1(__1);

        return f.asField();
    }

    /**
     * Get <code>public.text2ltree</code> as a field.
     */
    public static Field<Ltree> text2ltree(
          Field<String> __1
    ) {
        Text2ltree f = new Text2ltree();
        f.set__1(__1);

        return f.asField();
    }
}
