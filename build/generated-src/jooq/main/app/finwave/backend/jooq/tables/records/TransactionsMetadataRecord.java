/*
 * This file is generated by jOOQ.
 */
package app.finwave.backend.jooq.tables.records;


import app.finwave.backend.jooq.tables.TransactionsMetadata;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record3;
import org.jooq.Row3;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class TransactionsMetadataRecord extends UpdatableRecordImpl<TransactionsMetadataRecord> implements Record3<Long, Short, Long> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>public.transactions_metadata.id</code>.
     */
    public TransactionsMetadataRecord setId(Long value) {
        set(0, value);
        return this;
    }

    /**
     * Getter for <code>public.transactions_metadata.id</code>.
     */
    public Long getId() {
        return (Long) get(0);
    }

    /**
     * Setter for <code>public.transactions_metadata.type</code>.
     */
    public TransactionsMetadataRecord setType(Short value) {
        set(1, value);
        return this;
    }

    /**
     * Getter for <code>public.transactions_metadata.type</code>.
     */
    public Short getType() {
        return (Short) get(1);
    }

    /**
     * Setter for <code>public.transactions_metadata.arg</code>.
     */
    public TransactionsMetadataRecord setArg(Long value) {
        set(2, value);
        return this;
    }

    /**
     * Getter for <code>public.transactions_metadata.arg</code>.
     */
    public Long getArg() {
        return (Long) get(2);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<Long> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record3 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row3<Long, Short, Long> fieldsRow() {
        return (Row3) super.fieldsRow();
    }

    @Override
    public Row3<Long, Short, Long> valuesRow() {
        return (Row3) super.valuesRow();
    }

    @Override
    public Field<Long> field1() {
        return TransactionsMetadata.TRANSACTIONS_METADATA.ID;
    }

    @Override
    public Field<Short> field2() {
        return TransactionsMetadata.TRANSACTIONS_METADATA.TYPE;
    }

    @Override
    public Field<Long> field3() {
        return TransactionsMetadata.TRANSACTIONS_METADATA.ARG;
    }

    @Override
    public Long component1() {
        return getId();
    }

    @Override
    public Short component2() {
        return getType();
    }

    @Override
    public Long component3() {
        return getArg();
    }

    @Override
    public Long value1() {
        return getId();
    }

    @Override
    public Short value2() {
        return getType();
    }

    @Override
    public Long value3() {
        return getArg();
    }

    @Override
    public TransactionsMetadataRecord value1(Long value) {
        setId(value);
        return this;
    }

    @Override
    public TransactionsMetadataRecord value2(Short value) {
        setType(value);
        return this;
    }

    @Override
    public TransactionsMetadataRecord value3(Long value) {
        setArg(value);
        return this;
    }

    @Override
    public TransactionsMetadataRecord values(Long value1, Short value2, Long value3) {
        value1(value1);
        value2(value2);
        value3(value3);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached TransactionsMetadataRecord
     */
    public TransactionsMetadataRecord() {
        super(TransactionsMetadata.TRANSACTIONS_METADATA);
    }

    /**
     * Create a detached, initialised TransactionsMetadataRecord
     */
    public TransactionsMetadataRecord(Long id, Short type, Long arg) {
        super(TransactionsMetadata.TRANSACTIONS_METADATA);

        setId(id);
        setType(type);
        setArg(arg);
        resetChangedOnNotNull();
    }

    /**
     * Create a detached, initialised TransactionsMetadataRecord
     */
    public TransactionsMetadataRecord(app.finwave.backend.jooq.tables.pojos.TransactionsMetadata value) {
        super(TransactionsMetadata.TRANSACTIONS_METADATA);

        if (value != null) {
            setId(value.getId());
            setType(value.getType());
            setArg(value.getArg());
            resetChangedOnNotNull();
        }
    }
}
