/*
 * This file is generated by jOOQ.
 */
package app.finwave.backend.jooq.tables.pojos;


import java.io.Serializable;

import org.jooq.JSONB;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Reports implements Serializable {

    private static final long serialVersionUID = 1L;

    private final String description;
    private final Short status;
    private final Short type;
    private final JSONB filter;
    private final JSONB lang;
    private final Integer userId;
    private final String fileId;
    private final Long id;

    public Reports(Reports value) {
        this.description = value.description;
        this.status = value.status;
        this.type = value.type;
        this.filter = value.filter;
        this.lang = value.lang;
        this.userId = value.userId;
        this.fileId = value.fileId;
        this.id = value.id;
    }

    public Reports(
        String description,
        Short status,
        Short type,
        JSONB filter,
        JSONB lang,
        Integer userId,
        String fileId,
        Long id
    ) {
        this.description = description;
        this.status = status;
        this.type = type;
        this.filter = filter;
        this.lang = lang;
        this.userId = userId;
        this.fileId = fileId;
        this.id = id;
    }

    /**
     * Getter for <code>public.reports.description</code>.
     */
    public String getDescription() {
        return this.description;
    }

    /**
     * Getter for <code>public.reports.status</code>.
     */
    public Short getStatus() {
        return this.status;
    }

    /**
     * Getter for <code>public.reports.type</code>.
     */
    public Short getType() {
        return this.type;
    }

    /**
     * Getter for <code>public.reports.filter</code>.
     */
    public JSONB getFilter() {
        return this.filter;
    }

    /**
     * Getter for <code>public.reports.lang</code>.
     */
    public JSONB getLang() {
        return this.lang;
    }

    /**
     * Getter for <code>public.reports.user_id</code>.
     */
    public Integer getUserId() {
        return this.userId;
    }

    /**
     * Getter for <code>public.reports.file_id</code>.
     */
    public String getFileId() {
        return this.fileId;
    }

    /**
     * Getter for <code>public.reports.id</code>.
     */
    public Long getId() {
        return this.id;
    }

    @Override
    public boolean equals(Object obj) {
        if (this == obj)
            return true;
        if (obj == null)
            return false;
        if (getClass() != obj.getClass())
            return false;
        final Reports other = (Reports) obj;
        if (this.description == null) {
            if (other.description != null)
                return false;
        }
        else if (!this.description.equals(other.description))
            return false;
        if (this.status == null) {
            if (other.status != null)
                return false;
        }
        else if (!this.status.equals(other.status))
            return false;
        if (this.type == null) {
            if (other.type != null)
                return false;
        }
        else if (!this.type.equals(other.type))
            return false;
        if (this.filter == null) {
            if (other.filter != null)
                return false;
        }
        else if (!this.filter.equals(other.filter))
            return false;
        if (this.lang == null) {
            if (other.lang != null)
                return false;
        }
        else if (!this.lang.equals(other.lang))
            return false;
        if (this.userId == null) {
            if (other.userId != null)
                return false;
        }
        else if (!this.userId.equals(other.userId))
            return false;
        if (this.fileId == null) {
            if (other.fileId != null)
                return false;
        }
        else if (!this.fileId.equals(other.fileId))
            return false;
        if (this.id == null) {
            if (other.id != null)
                return false;
        }
        else if (!this.id.equals(other.id))
            return false;
        return true;
    }

    @Override
    public int hashCode() {
        final int prime = 31;
        int result = 1;
        result = prime * result + ((this.description == null) ? 0 : this.description.hashCode());
        result = prime * result + ((this.status == null) ? 0 : this.status.hashCode());
        result = prime * result + ((this.type == null) ? 0 : this.type.hashCode());
        result = prime * result + ((this.filter == null) ? 0 : this.filter.hashCode());
        result = prime * result + ((this.lang == null) ? 0 : this.lang.hashCode());
        result = prime * result + ((this.userId == null) ? 0 : this.userId.hashCode());
        result = prime * result + ((this.fileId == null) ? 0 : this.fileId.hashCode());
        result = prime * result + ((this.id == null) ? 0 : this.id.hashCode());
        return result;
    }

    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder("Reports (");

        sb.append(description);
        sb.append(", ").append(status);
        sb.append(", ").append(type);
        sb.append(", ").append(filter);
        sb.append(", ").append(lang);
        sb.append(", ").append(userId);
        sb.append(", ").append(fileId);
        sb.append(", ").append(id);

        sb.append(")");
        return sb.toString();
    }
}
