/*
 * This file is generated by jOOQ.
 */
package app.finwave.backend.jooq.tables.records;


import app.finwave.backend.jooq.tables.Currencies;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record6;
import org.jooq.Row6;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class CurrenciesRecord extends UpdatableRecordImpl<CurrenciesRecord> implements Record6<Long, Integer, String, String, Short, String> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>public.currencies.id</code>.
     */
    public CurrenciesRecord setId(Long value) {
        set(0, value);
        return this;
    }

    /**
     * Getter for <code>public.currencies.id</code>.
     */
    public Long getId() {
        return (Long) get(0);
    }

    /**
     * Setter for <code>public.currencies.owner_id</code>.
     */
    public CurrenciesRecord setOwnerId(Integer value) {
        set(1, value);
        return this;
    }

    /**
     * Getter for <code>public.currencies.owner_id</code>.
     */
    public Integer getOwnerId() {
        return (Integer) get(1);
    }

    /**
     * Setter for <code>public.currencies.code</code>.
     */
    public CurrenciesRecord setCode(String value) {
        set(2, value);
        return this;
    }

    /**
     * Getter for <code>public.currencies.code</code>.
     */
    public String getCode() {
        return (String) get(2);
    }

    /**
     * Setter for <code>public.currencies.symbol</code>.
     */
    public CurrenciesRecord setSymbol(String value) {
        set(3, value);
        return this;
    }

    /**
     * Getter for <code>public.currencies.symbol</code>.
     */
    public String getSymbol() {
        return (String) get(3);
    }

    /**
     * Setter for <code>public.currencies.decimals</code>.
     */
    public CurrenciesRecord setDecimals(Short value) {
        set(4, value);
        return this;
    }

    /**
     * Getter for <code>public.currencies.decimals</code>.
     */
    public Short getDecimals() {
        return (Short) get(4);
    }

    /**
     * Setter for <code>public.currencies.description</code>.
     */
    public CurrenciesRecord setDescription(String value) {
        set(5, value);
        return this;
    }

    /**
     * Getter for <code>public.currencies.description</code>.
     */
    public String getDescription() {
        return (String) get(5);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<Long> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record6 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row6<Long, Integer, String, String, Short, String> fieldsRow() {
        return (Row6) super.fieldsRow();
    }

    @Override
    public Row6<Long, Integer, String, String, Short, String> valuesRow() {
        return (Row6) super.valuesRow();
    }

    @Override
    public Field<Long> field1() {
        return Currencies.CURRENCIES.ID;
    }

    @Override
    public Field<Integer> field2() {
        return Currencies.CURRENCIES.OWNER_ID;
    }

    @Override
    public Field<String> field3() {
        return Currencies.CURRENCIES.CODE;
    }

    @Override
    public Field<String> field4() {
        return Currencies.CURRENCIES.SYMBOL;
    }

    @Override
    public Field<Short> field5() {
        return Currencies.CURRENCIES.DECIMALS;
    }

    @Override
    public Field<String> field6() {
        return Currencies.CURRENCIES.DESCRIPTION;
    }

    @Override
    public Long component1() {
        return getId();
    }

    @Override
    public Integer component2() {
        return getOwnerId();
    }

    @Override
    public String component3() {
        return getCode();
    }

    @Override
    public String component4() {
        return getSymbol();
    }

    @Override
    public Short component5() {
        return getDecimals();
    }

    @Override
    public String component6() {
        return getDescription();
    }

    @Override
    public Long value1() {
        return getId();
    }

    @Override
    public Integer value2() {
        return getOwnerId();
    }

    @Override
    public String value3() {
        return getCode();
    }

    @Override
    public String value4() {
        return getSymbol();
    }

    @Override
    public Short value5() {
        return getDecimals();
    }

    @Override
    public String value6() {
        return getDescription();
    }

    @Override
    public CurrenciesRecord value1(Long value) {
        setId(value);
        return this;
    }

    @Override
    public CurrenciesRecord value2(Integer value) {
        setOwnerId(value);
        return this;
    }

    @Override
    public CurrenciesRecord value3(String value) {
        setCode(value);
        return this;
    }

    @Override
    public CurrenciesRecord value4(String value) {
        setSymbol(value);
        return this;
    }

    @Override
    public CurrenciesRecord value5(Short value) {
        setDecimals(value);
        return this;
    }

    @Override
    public CurrenciesRecord value6(String value) {
        setDescription(value);
        return this;
    }

    @Override
    public CurrenciesRecord values(Long value1, Integer value2, String value3, String value4, Short value5, String value6) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        value6(value6);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached CurrenciesRecord
     */
    public CurrenciesRecord() {
        super(Currencies.CURRENCIES);
    }

    /**
     * Create a detached, initialised CurrenciesRecord
     */
    public CurrenciesRecord(Long id, Integer ownerId, String code, String symbol, Short decimals, String description) {
        super(Currencies.CURRENCIES);

        setId(id);
        setOwnerId(ownerId);
        setCode(code);
        setSymbol(symbol);
        setDecimals(decimals);
        setDescription(description);
        resetChangedOnNotNull();
    }

    /**
     * Create a detached, initialised CurrenciesRecord
     */
    public CurrenciesRecord(app.finwave.backend.jooq.tables.pojos.Currencies value) {
        super(Currencies.CURRENCIES);

        if (value != null) {
            setId(value.getId());
            setOwnerId(value.getOwnerId());
            setCode(value.getCode());
            setSymbol(value.getSymbol());
            setDecimals(value.getDecimals());
            setDescription(value.getDescription());
            resetChangedOnNotNull();
        }
    }
}
