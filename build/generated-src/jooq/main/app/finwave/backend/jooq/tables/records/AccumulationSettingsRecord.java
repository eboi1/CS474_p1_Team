/*
 * This file is generated by jOOQ.
 */
package app.finwave.backend.jooq.tables.records;


import app.finwave.backend.jooq.tables.AccumulationSettings;

import org.jooq.Field;
import org.jooq.JSONB;
import org.jooq.Record5;
import org.jooq.Row5;
import org.jooq.impl.TableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class AccumulationSettingsRecord extends TableRecordImpl<AccumulationSettingsRecord> implements Record5<Long, Long, Long, Integer, JSONB> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>public.accumulation_settings.source_account_id</code>.
     */
    public AccumulationSettingsRecord setSourceAccountId(Long value) {
        set(0, value);
        return this;
    }

    /**
     * Getter for <code>public.accumulation_settings.source_account_id</code>.
     */
    public Long getSourceAccountId() {
        return (Long) get(0);
    }

    /**
     * Setter for <code>public.accumulation_settings.target_account_id</code>.
     */
    public AccumulationSettingsRecord setTargetAccountId(Long value) {
        set(1, value);
        return this;
    }

    /**
     * Getter for <code>public.accumulation_settings.target_account_id</code>.
     */
    public Long getTargetAccountId() {
        return (Long) get(1);
    }

    /**
     * Setter for <code>public.accumulation_settings.category_id</code>.
     */
    public AccumulationSettingsRecord setCategoryId(Long value) {
        set(2, value);
        return this;
    }

    /**
     * Getter for <code>public.accumulation_settings.category_id</code>.
     */
    public Long getCategoryId() {
        return (Long) get(2);
    }

    /**
     * Setter for <code>public.accumulation_settings.owner_id</code>.
     */
    public AccumulationSettingsRecord setOwnerId(Integer value) {
        set(3, value);
        return this;
    }

    /**
     * Getter for <code>public.accumulation_settings.owner_id</code>.
     */
    public Integer getOwnerId() {
        return (Integer) get(3);
    }

    /**
     * Setter for <code>public.accumulation_settings.steps</code>.
     */
    public AccumulationSettingsRecord setSteps(JSONB value) {
        set(4, value);
        return this;
    }

    /**
     * Getter for <code>public.accumulation_settings.steps</code>.
     */
    public JSONB getSteps() {
        return (JSONB) get(4);
    }

    // -------------------------------------------------------------------------
    // Record5 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row5<Long, Long, Long, Integer, JSONB> fieldsRow() {
        return (Row5) super.fieldsRow();
    }

    @Override
    public Row5<Long, Long, Long, Integer, JSONB> valuesRow() {
        return (Row5) super.valuesRow();
    }

    @Override
    public Field<Long> field1() {
        return AccumulationSettings.ACCUMULATION_SETTINGS.SOURCE_ACCOUNT_ID;
    }

    @Override
    public Field<Long> field2() {
        return AccumulationSettings.ACCUMULATION_SETTINGS.TARGET_ACCOUNT_ID;
    }

    @Override
    public Field<Long> field3() {
        return AccumulationSettings.ACCUMULATION_SETTINGS.CATEGORY_ID;
    }

    @Override
    public Field<Integer> field4() {
        return AccumulationSettings.ACCUMULATION_SETTINGS.OWNER_ID;
    }

    @Override
    public Field<JSONB> field5() {
        return AccumulationSettings.ACCUMULATION_SETTINGS.STEPS;
    }

    @Override
    public Long component1() {
        return getSourceAccountId();
    }

    @Override
    public Long component2() {
        return getTargetAccountId();
    }

    @Override
    public Long component3() {
        return getCategoryId();
    }

    @Override
    public Integer component4() {
        return getOwnerId();
    }

    @Override
    public JSONB component5() {
        return getSteps();
    }

    @Override
    public Long value1() {
        return getSourceAccountId();
    }

    @Override
    public Long value2() {
        return getTargetAccountId();
    }

    @Override
    public Long value3() {
        return getCategoryId();
    }

    @Override
    public Integer value4() {
        return getOwnerId();
    }

    @Override
    public JSONB value5() {
        return getSteps();
    }

    @Override
    public AccumulationSettingsRecord value1(Long value) {
        setSourceAccountId(value);
        return this;
    }

    @Override
    public AccumulationSettingsRecord value2(Long value) {
        setTargetAccountId(value);
        return this;
    }

    @Override
    public AccumulationSettingsRecord value3(Long value) {
        setCategoryId(value);
        return this;
    }

    @Override
    public AccumulationSettingsRecord value4(Integer value) {
        setOwnerId(value);
        return this;
    }

    @Override
    public AccumulationSettingsRecord value5(JSONB value) {
        setSteps(value);
        return this;
    }

    @Override
    public AccumulationSettingsRecord values(Long value1, Long value2, Long value3, Integer value4, JSONB value5) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached AccumulationSettingsRecord
     */
    public AccumulationSettingsRecord() {
        super(AccumulationSettings.ACCUMULATION_SETTINGS);
    }

    /**
     * Create a detached, initialised AccumulationSettingsRecord
     */
    public AccumulationSettingsRecord(Long sourceAccountId, Long targetAccountId, Long categoryId, Integer ownerId, JSONB steps) {
        super(AccumulationSettings.ACCUMULATION_SETTINGS);

        setSourceAccountId(sourceAccountId);
        setTargetAccountId(targetAccountId);
        setCategoryId(categoryId);
        setOwnerId(ownerId);
        setSteps(steps);
        resetChangedOnNotNull();
    }

    /**
     * Create a detached, initialised AccumulationSettingsRecord
     */
    public AccumulationSettingsRecord(app.finwave.backend.jooq.tables.pojos.AccumulationSettings value) {
        super(AccumulationSettings.ACCUMULATION_SETTINGS);

        if (value != null) {
            setSourceAccountId(value.getSourceAccountId());
            setTargetAccountId(value.getTargetAccountId());
            setCategoryId(value.getCategoryId());
            setOwnerId(value.getOwnerId());
            setSteps(value.getSteps());
            resetChangedOnNotNull();
        }
    }
}
