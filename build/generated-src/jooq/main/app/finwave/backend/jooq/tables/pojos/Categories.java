/*
 * This file is generated by jOOQ.
 */
package app.finwave.backend.jooq.tables.pojos;


import java.io.Serializable;

import org.jooq.postgres.extensions.types.Ltree;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Categories implements Serializable {

    private static final long serialVersionUID = 1L;

    private final Long id;
    private final Integer ownerId;
    private final Short type;
    private final Ltree parentsTree;
    private final String name;
    private final String description;

    public Categories(Categories value) {
        this.id = value.id;
        this.ownerId = value.ownerId;
        this.type = value.type;
        this.parentsTree = value.parentsTree;
        this.name = value.name;
        this.description = value.description;
    }

    public Categories(
        Long id,
        Integer ownerId,
        Short type,
        Ltree parentsTree,
        String name,
        String description
    ) {
        this.id = id;
        this.ownerId = ownerId;
        this.type = type;
        this.parentsTree = parentsTree;
        this.name = name;
        this.description = description;
    }

    /**
     * Getter for <code>public.categories.id</code>.
     */
    public Long getId() {
        return this.id;
    }

    /**
     * Getter for <code>public.categories.owner_id</code>.
     */
    public Integer getOwnerId() {
        return this.ownerId;
    }

    /**
     * Getter for <code>public.categories.type</code>.
     */
    public Short getType() {
        return this.type;
    }

    /**
     * Getter for <code>public.categories.parents_tree</code>.
     */
    public Ltree getParentsTree() {
        return this.parentsTree;
    }

    /**
     * Getter for <code>public.categories.name</code>.
     */
    public String getName() {
        return this.name;
    }

    /**
     * Getter for <code>public.categories.description</code>.
     */
    public String getDescription() {
        return this.description;
    }

    @Override
    public boolean equals(Object obj) {
        if (this == obj)
            return true;
        if (obj == null)
            return false;
        if (getClass() != obj.getClass())
            return false;
        final Categories other = (Categories) obj;
        if (this.id == null) {
            if (other.id != null)
                return false;
        }
        else if (!this.id.equals(other.id))
            return false;
        if (this.ownerId == null) {
            if (other.ownerId != null)
                return false;
        }
        else if (!this.ownerId.equals(other.ownerId))
            return false;
        if (this.type == null) {
            if (other.type != null)
                return false;
        }
        else if (!this.type.equals(other.type))
            return false;
        if (this.parentsTree == null) {
            if (other.parentsTree != null)
                return false;
        }
        else if (!this.parentsTree.equals(other.parentsTree))
            return false;
        if (this.name == null) {
            if (other.name != null)
                return false;
        }
        else if (!this.name.equals(other.name))
            return false;
        if (this.description == null) {
            if (other.description != null)
                return false;
        }
        else if (!this.description.equals(other.description))
            return false;
        return true;
    }

    @Override
    public int hashCode() {
        final int prime = 31;
        int result = 1;
        result = prime * result + ((this.id == null) ? 0 : this.id.hashCode());
        result = prime * result + ((this.ownerId == null) ? 0 : this.ownerId.hashCode());
        result = prime * result + ((this.type == null) ? 0 : this.type.hashCode());
        result = prime * result + ((this.parentsTree == null) ? 0 : this.parentsTree.hashCode());
        result = prime * result + ((this.name == null) ? 0 : this.name.hashCode());
        result = prime * result + ((this.description == null) ? 0 : this.description.hashCode());
        return result;
    }

    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder("Categories (");

        sb.append(id);
        sb.append(", ").append(ownerId);
        sb.append(", ").append(type);
        sb.append(", ").append(parentsTree);
        sb.append(", ").append(name);
        sb.append(", ").append(description);

        sb.append(")");
        return sb.toString();
    }
}
