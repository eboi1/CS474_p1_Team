/*
 * This file is generated by jOOQ.
 */
package app.finwave.backend.jooq;


import app.finwave.backend.jooq.tables.Accounts;
import app.finwave.backend.jooq.tables.AccountsFolders;
import app.finwave.backend.jooq.tables.AccumulationSettings;
import app.finwave.backend.jooq.tables.AiContexts;
import app.finwave.backend.jooq.tables.AiMessages;
import app.finwave.backend.jooq.tables.Categories;
import app.finwave.backend.jooq.tables.CategoriesBudgets;
import app.finwave.backend.jooq.tables.Currencies;
import app.finwave.backend.jooq.tables.Files;
import app.finwave.backend.jooq.tables.FlywaySchemaHistory;
import app.finwave.backend.jooq.tables.InternalTransactionsMetadata;
import app.finwave.backend.jooq.tables.Notes;
import app.finwave.backend.jooq.tables.NotificationsPoints;
import app.finwave.backend.jooq.tables.NotificationsPull;
import app.finwave.backend.jooq.tables.RecurringTransactions;
import app.finwave.backend.jooq.tables.Reports;
import app.finwave.backend.jooq.tables.Transactions;
import app.finwave.backend.jooq.tables.TransactionsMetadata;
import app.finwave.backend.jooq.tables.Users;
import app.finwave.backend.jooq.tables.UsersSessions;

import java.util.Arrays;
import java.util.List;

import org.jooq.Catalog;
import org.jooq.Sequence;
import org.jooq.Table;
import org.jooq.impl.SchemaImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Public extends SchemaImpl {

    private static final long serialVersionUID = 1L;

    /**
     * The reference instance of <code>public</code>
     */
    public static final Public PUBLIC = new Public();

    /**
     * The table <code>public.accounts</code>.
     */
    public final Accounts ACCOUNTS = Accounts.ACCOUNTS;

    /**
     * The table <code>public.accounts_folders</code>.
     */
    public final AccountsFolders ACCOUNTS_FOLDERS = AccountsFolders.ACCOUNTS_FOLDERS;

    /**
     * The table <code>public.accumulation_settings</code>.
     */
    public final AccumulationSettings ACCUMULATION_SETTINGS = AccumulationSettings.ACCUMULATION_SETTINGS;

    /**
     * The table <code>public.ai_contexts</code>.
     */
    public final AiContexts AI_CONTEXTS = AiContexts.AI_CONTEXTS;

    /**
     * The table <code>public.ai_messages</code>.
     */
    public final AiMessages AI_MESSAGES = AiMessages.AI_MESSAGES;

    /**
     * The table <code>public.categories</code>.
     */
    public final Categories CATEGORIES = Categories.CATEGORIES;

    /**
     * The table <code>public.categories_budgets</code>.
     */
    public final CategoriesBudgets CATEGORIES_BUDGETS = CategoriesBudgets.CATEGORIES_BUDGETS;

    /**
     * The table <code>public.currencies</code>.
     */
    public final Currencies CURRENCIES = Currencies.CURRENCIES;

    /**
     * The table <code>public.files</code>.
     */
    public final Files FILES = Files.FILES;

    /**
     * The table <code>public.flyway_schema_history</code>.
     */
    public final FlywaySchemaHistory FLYWAY_SCHEMA_HISTORY = FlywaySchemaHistory.FLYWAY_SCHEMA_HISTORY;

    /**
     * The table <code>public.internal_transactions_metadata</code>.
     */
    public final InternalTransactionsMetadata INTERNAL_TRANSACTIONS_METADATA = InternalTransactionsMetadata.INTERNAL_TRANSACTIONS_METADATA;

    /**
     * The table <code>public.notes</code>.
     */
    public final Notes NOTES = Notes.NOTES;

    /**
     * The table <code>public.notifications_points</code>.
     */
    public final NotificationsPoints NOTIFICATIONS_POINTS = NotificationsPoints.NOTIFICATIONS_POINTS;

    /**
     * The table <code>public.notifications_pull</code>.
     */
    public final NotificationsPull NOTIFICATIONS_PULL = NotificationsPull.NOTIFICATIONS_PULL;

    /**
     * The table <code>public.recurring_transactions</code>.
     */
    public final RecurringTransactions RECURRING_TRANSACTIONS = RecurringTransactions.RECURRING_TRANSACTIONS;

    /**
     * The table <code>public.reports</code>.
     */
    public final Reports REPORTS = Reports.REPORTS;

    /**
     * The table <code>public.transactions</code>.
     */
    public final Transactions TRANSACTIONS = Transactions.TRANSACTIONS;

    /**
     * The table <code>public.transactions_metadata</code>.
     */
    public final TransactionsMetadata TRANSACTIONS_METADATA = TransactionsMetadata.TRANSACTIONS_METADATA;

    /**
     * The table <code>public.users</code>.
     */
    public final Users USERS = Users.USERS;

    /**
     * The table <code>public.users_sessions</code>.
     */
    public final UsersSessions USERS_SESSIONS = UsersSessions.USERS_SESSIONS;

    /**
     * No further instances allowed
     */
    private Public() {
        super("public", null);
    }


    @Override
    public Catalog getCatalog() {
        return DefaultCatalog.DEFAULT_CATALOG;
    }

    @Override
    public final List<Sequence<?>> getSequences() {
        return Arrays.asList(
            Sequences.ACCOUNTS_TAGS_ID_SEQ,
            Sequences.INTERNAL_TRANSFERS_ID_SEQ,
            Sequences.TRANSACTIONS_TAGS_ID_SEQ,
            Sequences.TRANSACTIONS_TAGS_MANAGEMENT_ID_SEQ
        );
    }

    @Override
    public final List<Table<?>> getTables() {
        return Arrays.asList(
            Accounts.ACCOUNTS,
            AccountsFolders.ACCOUNTS_FOLDERS,
            AccumulationSettings.ACCUMULATION_SETTINGS,
            AiContexts.AI_CONTEXTS,
            AiMessages.AI_MESSAGES,
            Categories.CATEGORIES,
            CategoriesBudgets.CATEGORIES_BUDGETS,
            Currencies.CURRENCIES,
            Files.FILES,
            FlywaySchemaHistory.FLYWAY_SCHEMA_HISTORY,
            InternalTransactionsMetadata.INTERNAL_TRANSACTIONS_METADATA,
            Notes.NOTES,
            NotificationsPoints.NOTIFICATIONS_POINTS,
            NotificationsPull.NOTIFICATIONS_PULL,
            RecurringTransactions.RECURRING_TRANSACTIONS,
            Reports.REPORTS,
            Transactions.TRANSACTIONS,
            TransactionsMetadata.TRANSACTIONS_METADATA,
            Users.USERS,
            UsersSessions.USERS_SESSIONS
        );
    }
}
