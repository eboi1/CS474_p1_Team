/*
 * This file is generated by jOOQ.
 */
package app.finwave.backend.jooq.tables.pojos;


import java.io.Serializable;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Currencies implements Serializable {

    private static final long serialVersionUID = 1L;

    private final Long id;
    private final Integer ownerId;
    private final String code;
    private final String symbol;
    private final Short decimals;
    private final String description;

    public Currencies(Currencies value) {
        this.id = value.id;
        this.ownerId = value.ownerId;
        this.code = value.code;
        this.symbol = value.symbol;
        this.decimals = value.decimals;
        this.description = value.description;
    }

    public Currencies(
        Long id,
        Integer ownerId,
        String code,
        String symbol,
        Short decimals,
        String description
    ) {
        this.id = id;
        this.ownerId = ownerId;
        this.code = code;
        this.symbol = symbol;
        this.decimals = decimals;
        this.description = description;
    }

    /**
     * Getter for <code>public.currencies.id</code>.
     */
    public Long getId() {
        return this.id;
    }

    /**
     * Getter for <code>public.currencies.owner_id</code>.
     */
    public Integer getOwnerId() {
        return this.ownerId;
    }

    /**
     * Getter for <code>public.currencies.code</code>.
     */
    public String getCode() {
        return this.code;
    }

    /**
     * Getter for <code>public.currencies.symbol</code>.
     */
    public String getSymbol() {
        return this.symbol;
    }

    /**
     * Getter for <code>public.currencies.decimals</code>.
     */
    public Short getDecimals() {
        return this.decimals;
    }

    /**
     * Getter for <code>public.currencies.description</code>.
     */
    public String getDescription() {
        return this.description;
    }

    @Override
    public boolean equals(Object obj) {
        if (this == obj)
            return true;
        if (obj == null)
            return false;
        if (getClass() != obj.getClass())
            return false;
        final Currencies other = (Currencies) obj;
        if (this.id == null) {
            if (other.id != null)
                return false;
        }
        else if (!this.id.equals(other.id))
            return false;
        if (this.ownerId == null) {
            if (other.ownerId != null)
                return false;
        }
        else if (!this.ownerId.equals(other.ownerId))
            return false;
        if (this.code == null) {
            if (other.code != null)
                return false;
        }
        else if (!this.code.equals(other.code))
            return false;
        if (this.symbol == null) {
            if (other.symbol != null)
                return false;
        }
        else if (!this.symbol.equals(other.symbol))
            return false;
        if (this.decimals == null) {
            if (other.decimals != null)
                return false;
        }
        else if (!this.decimals.equals(other.decimals))
            return false;
        if (this.description == null) {
            if (other.description != null)
                return false;
        }
        else if (!this.description.equals(other.description))
            return false;
        return true;
    }

    @Override
    public int hashCode() {
        final int prime = 31;
        int result = 1;
        result = prime * result + ((this.id == null) ? 0 : this.id.hashCode());
        result = prime * result + ((this.ownerId == null) ? 0 : this.ownerId.hashCode());
        result = prime * result + ((this.code == null) ? 0 : this.code.hashCode());
        result = prime * result + ((this.symbol == null) ? 0 : this.symbol.hashCode());
        result = prime * result + ((this.decimals == null) ? 0 : this.decimals.hashCode());
        result = prime * result + ((this.description == null) ? 0 : this.description.hashCode());
        return result;
    }

    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder("Currencies (");

        sb.append(id);
        sb.append(", ").append(ownerId);
        sb.append(", ").append(code);
        sb.append(", ").append(symbol);
        sb.append(", ").append(decimals);
        sb.append(", ").append(description);

        sb.append(")");
        return sb.toString();
    }
}
