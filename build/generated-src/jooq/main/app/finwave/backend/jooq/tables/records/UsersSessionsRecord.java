/*
 * This file is generated by jOOQ.
 */
package app.finwave.backend.jooq.tables.records;


import app.finwave.backend.jooq.tables.UsersSessions;

import java.time.LocalDateTime;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record7;
import org.jooq.Row7;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class UsersSessionsRecord extends UpdatableRecordImpl<UsersSessionsRecord> implements Record7<Long, Integer, String, LocalDateTime, LocalDateTime, String, Boolean> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>public.users_sessions.id</code>.
     */
    public UsersSessionsRecord setId(Long value) {
        set(0, value);
        return this;
    }

    /**
     * Getter for <code>public.users_sessions.id</code>.
     */
    public Long getId() {
        return (Long) get(0);
    }

    /**
     * Setter for <code>public.users_sessions.user_id</code>.
     */
    public UsersSessionsRecord setUserId(Integer value) {
        set(1, value);
        return this;
    }

    /**
     * Getter for <code>public.users_sessions.user_id</code>.
     */
    public Integer getUserId() {
        return (Integer) get(1);
    }

    /**
     * Setter for <code>public.users_sessions.token</code>.
     */
    public UsersSessionsRecord setToken(String value) {
        set(2, value);
        return this;
    }

    /**
     * Getter for <code>public.users_sessions.token</code>.
     */
    public String getToken() {
        return (String) get(2);
    }

    /**
     * Setter for <code>public.users_sessions.created_at</code>.
     */
    public UsersSessionsRecord setCreatedAt(LocalDateTime value) {
        set(3, value);
        return this;
    }

    /**
     * Getter for <code>public.users_sessions.created_at</code>.
     */
    public LocalDateTime getCreatedAt() {
        return (LocalDateTime) get(3);
    }

    /**
     * Setter for <code>public.users_sessions.expires_at</code>.
     */
    public UsersSessionsRecord setExpiresAt(LocalDateTime value) {
        set(4, value);
        return this;
    }

    /**
     * Getter for <code>public.users_sessions.expires_at</code>.
     */
    public LocalDateTime getExpiresAt() {
        return (LocalDateTime) get(4);
    }

    /**
     * Setter for <code>public.users_sessions.description</code>.
     */
    public UsersSessionsRecord setDescription(String value) {
        set(5, value);
        return this;
    }

    /**
     * Getter for <code>public.users_sessions.description</code>.
     */
    public String getDescription() {
        return (String) get(5);
    }

    /**
     * Setter for <code>public.users_sessions.limited</code>.
     */
    public UsersSessionsRecord setLimited(Boolean value) {
        set(6, value);
        return this;
    }

    /**
     * Getter for <code>public.users_sessions.limited</code>.
     */
    public Boolean getLimited() {
        return (Boolean) get(6);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<Long> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record7 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row7<Long, Integer, String, LocalDateTime, LocalDateTime, String, Boolean> fieldsRow() {
        return (Row7) super.fieldsRow();
    }

    @Override
    public Row7<Long, Integer, String, LocalDateTime, LocalDateTime, String, Boolean> valuesRow() {
        return (Row7) super.valuesRow();
    }

    @Override
    public Field<Long> field1() {
        return UsersSessions.USERS_SESSIONS.ID;
    }

    @Override
    public Field<Integer> field2() {
        return UsersSessions.USERS_SESSIONS.USER_ID;
    }

    @Override
    public Field<String> field3() {
        return UsersSessions.USERS_SESSIONS.TOKEN;
    }

    @Override
    public Field<LocalDateTime> field4() {
        return UsersSessions.USERS_SESSIONS.CREATED_AT;
    }

    @Override
    public Field<LocalDateTime> field5() {
        return UsersSessions.USERS_SESSIONS.EXPIRES_AT;
    }

    @Override
    public Field<String> field6() {
        return UsersSessions.USERS_SESSIONS.DESCRIPTION;
    }

    @Override
    public Field<Boolean> field7() {
        return UsersSessions.USERS_SESSIONS.LIMITED;
    }

    @Override
    public Long component1() {
        return getId();
    }

    @Override
    public Integer component2() {
        return getUserId();
    }

    @Override
    public String component3() {
        return getToken();
    }

    @Override
    public LocalDateTime component4() {
        return getCreatedAt();
    }

    @Override
    public LocalDateTime component5() {
        return getExpiresAt();
    }

    @Override
    public String component6() {
        return getDescription();
    }

    @Override
    public Boolean component7() {
        return getLimited();
    }

    @Override
    public Long value1() {
        return getId();
    }

    @Override
    public Integer value2() {
        return getUserId();
    }

    @Override
    public String value3() {
        return getToken();
    }

    @Override
    public LocalDateTime value4() {
        return getCreatedAt();
    }

    @Override
    public LocalDateTime value5() {
        return getExpiresAt();
    }

    @Override
    public String value6() {
        return getDescription();
    }

    @Override
    public Boolean value7() {
        return getLimited();
    }

    @Override
    public UsersSessionsRecord value1(Long value) {
        setId(value);
        return this;
    }

    @Override
    public UsersSessionsRecord value2(Integer value) {
        setUserId(value);
        return this;
    }

    @Override
    public UsersSessionsRecord value3(String value) {
        setToken(value);
        return this;
    }

    @Override
    public UsersSessionsRecord value4(LocalDateTime value) {
        setCreatedAt(value);
        return this;
    }

    @Override
    public UsersSessionsRecord value5(LocalDateTime value) {
        setExpiresAt(value);
        return this;
    }

    @Override
    public UsersSessionsRecord value6(String value) {
        setDescription(value);
        return this;
    }

    @Override
    public UsersSessionsRecord value7(Boolean value) {
        setLimited(value);
        return this;
    }

    @Override
    public UsersSessionsRecord values(Long value1, Integer value2, String value3, LocalDateTime value4, LocalDateTime value5, String value6, Boolean value7) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        value6(value6);
        value7(value7);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached UsersSessionsRecord
     */
    public UsersSessionsRecord() {
        super(UsersSessions.USERS_SESSIONS);
    }

    /**
     * Create a detached, initialised UsersSessionsRecord
     */
    public UsersSessionsRecord(Long id, Integer userId, String token, LocalDateTime createdAt, LocalDateTime expiresAt, String description, Boolean limited) {
        super(UsersSessions.USERS_SESSIONS);

        setId(id);
        setUserId(userId);
        setToken(token);
        setCreatedAt(createdAt);
        setExpiresAt(expiresAt);
        setDescription(description);
        setLimited(limited);
        resetChangedOnNotNull();
    }

    /**
     * Create a detached, initialised UsersSessionsRecord
     */
    public UsersSessionsRecord(app.finwave.backend.jooq.tables.pojos.UsersSessions value) {
        super(UsersSessions.USERS_SESSIONS);

        if (value != null) {
            setId(value.getId());
            setUserId(value.getUserId());
            setToken(value.getToken());
            setCreatedAt(value.getCreatedAt());
            setExpiresAt(value.getExpiresAt());
            setDescription(value.getDescription());
            setLimited(value.getLimited());
            resetChangedOnNotNull();
        }
    }
}
